<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FolderBrowserDialog2" xml:space="preserve">
    <value>Choose the folder you would like to import the answers and results from. These will be taken from the same episode.</value>
  </data>
  <data name="geen" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="ImportSuccess" xml:space="preserve">
    <value>The results and answers are successfully imported</value>
  </data>
  <data name="dpiMessage" xml:space="preserve">
    <value>We have detected that your screen is at {0} dpi. Unfortunately lacks WIDM Exam some support. Most of it should work, but there may be some complications. In case you find any problems or bugs, please send an e-mail using "Contact" on the website. Thanks in advance</value>
  </data>
  <data name="Aflevering" xml:space="preserve">
    <value>Episode </value>
  </data>
  <data name="ClearListWarning" xml:space="preserve">
    <value>Are you sure you want to clear the list? This cannot be undone!</value>
  </data>
  <data name="GroepsmodusAan" xml:space="preserve">
    <value>Group mode is on!</value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="OCRAExtended" xml:space="preserve">
    <value>OCR A Extended is installed</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>This screen is {0}×{1}. Other formats will be made fit.</value>
  </data>
  <data name="WrongPass" xml:space="preserve">
    <value>Wrong password, please restart the application.</value>
  </data>
  <data name="fontMessage" xml:space="preserve">
    <value>There are different fonts that can be used with WIDM Exam. The main fonts are listed. If a font is grey, it means that the font is not installed. Please install it from the folder "Fonts" in your WIDM Exam folder.</value>
  </data>
  <data name="SaveFirst" xml:space="preserve">
    <value>Do you want to save this episode's data first? If not, the data will be lost!</value>
  </data>
  <data name="DeleteEpisode" xml:space="preserve">
    <value>Are you sure you want to remove this episode from?</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Please choose a folder under group mode first</value>
  </data>
  <data name="Primair" xml:space="preserve">
    <value>Primary</value>
  </data>
  <data name="MonitorChanged" xml:space="preserve">
    <value>The monitor used for the quiz and execution has been changed to monitor {0}</value>
  </data>
  <data name="WrongFolderGeluid" xml:space="preserve">
    <value>Choose a file from the folder "Geluid"</value>
  </data>
  <data name="WrongFolderAfbeelding" xml:space="preserve">
    <value>Choose a file from the folder "Afbeeldingen"</value>
  </data>
  <data name="FontNotInstalled" xml:space="preserve">
    <value>The font {0} was not found. Please install this font for this CurrentTheme.</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Do you want to save the changes before exiting?</value>
  </data>
  <data name="SavedSuccess" xml:space="preserve">
    <value>Successfully saved</value>
  </data>
  <data name="Afl" xml:space="preserve">
    <value>Ep. </value>
  </data>
  <data name="CandidateAlreadyExists" xml:space="preserve">
    <value>A candidate with this name already exists</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SelectItemFirst" xml:space="preserve">
    <value>Please select an item first before editing</value>
  </data>
  <data name="CandidateNotActive" xml:space="preserve">
    <value>This candidate is not active for this episode</value>
  </data>
  <data name="NameNotFound" xml:space="preserve">
    <value>Name wasn't found. Are you sure it exists?</value>
  </data>
  <data name="RemoveEpisodeDialog" xml:space="preserve">
    <value>Are you sure you want to remove episode {0}?</value>
  </data>
  <data name="TestAlreadyDone" xml:space="preserve">
    <value>This candidate already did the quiz!</value>
  </data>
</root>