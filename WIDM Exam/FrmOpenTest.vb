Imports System.ComponentModel
Imports System.Drawing.Imaging
Imports System.Globalization
Imports System.IO
Imports System.Net
Imports System.Security.Cryptography
Imports System.Text
Imports System.Text.RegularExpressions
Imports System.Threading
Imports System.Windows.Forms.DataVisualization.Charting
Imports System.Xml
Imports Microsoft.VisualBasic.FileIO
Imports Newtonsoft.Json
Imports WMPLib

Public Class FrmOpenTest
    Public Const Rood = "Rood"
    Public Const Groen = "Groen"

    Declare Function AddFontResource Lib "gdi32" Alias "AddFontResourceA" (lpFileName As String) As Long
    Public sKandidaten As String = ""
    Public webclient As New WebBrowser
    Public percentageCache As Integer = 0
    Public percentage As Integer = 0
    Public header As Image
    Public encrypted As Boolean = False
    Public file As String
    Public startedUp As Boolean = False
    Public schermen As New ComboBox
    Public totalRightAnswers As Integer = 0
    Public totalTime As Integer = 0
    Public dpiPercent As New TextBox
    Public previousEpisode As Integer = My.Settings.aflevering
    Public listSortStatistics As New ListView
    'Public Property Encoding As String = "UTF-16"
    Public selectedLoad As Array = {True, True, True, True}
    Dim sortColumn As Integer = -1
    Public theme As Theme

    Public Sub LoadTheme()
        Try
            'Dim fs As New FileStream(CurDir() & "\Thema's\" & My.Settings.theme, FileMode.Open)

            'Dim formatter As New BinaryFormatter

            '' Deserialize the hashtable from the file and 
            '' assign the reference to the local variable.
            'theme = DirectCast(formatter.Deserialize(fs), Theme)

            'fs.Close()

            Dim objStreamReader As New IO.StreamReader(CurDir() & "\Thema's\" & My.Settings.theme)
            theme = JsonConvert.DeserializeObject(Of Theme)(objStreamReader.ReadToEnd())
            objStreamReader.Close()
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical)
        End Try

    End Sub


    Public Sub groepsmodusUpdate()
        If startedUp = True Then
            If rGroep.Checked Then
                txtWieisdemol.Items.Clear()
                txtWieisdemol.SelectedItem = ""
                txtWieisdemol.Text = ""
                Dim li As ListViewItem
                For Each li In listviewExecutie.Items
                    listviewExecutie.Items.Remove(li)
                Next
                Dim li2 As ListViewItem
                For Each li2 In listAntwoorden.Items
                    listAntwoorden.Items.Remove(li2)
                Next
                For Each li3 As ListViewItem In listviewScherm.Items
                    listviewScherm.Items.Remove(li3)
                Next
                '        'If startedUp = True Then
                '        '    laatsteVraagInladen()
                '        '    Inladen()
                '        'End If

                ' txtKandidaten.Text = txtFolder.Text & "\afl" & numAflevering.Value & ".widmk"
                file = txtFolder.Text & "\afl" & numAflevering.Value & ".widm3"
                listKandidaten.Items.Clear()
                '        loadKandidaten()
                LoadXML()
                calculateCandidates()
                CalculateSchermen()
            End If
        End If
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        OpenFileDialog1.ShowDialog()
    End Sub

    Private Sub OpenFileDialog1_FileOk(sender As Object, e As CancelEventArgs) Handles OpenFileDialog1.FileOk
        txtTest.Text = OpenFileDialog1.FileName
    End Sub

    Private Sub Button3_Click(sender As Object, e As EventArgs)
        SaveFileDialog1.ShowDialog()
    End Sub

    Public Sub calculateCandidates()
        numKandidaten.Value = listKandidaten.Items.Count
        txtAantalKandidaten.Text = listKandidaten.Items.Count.ToString
        listKandidaten.Sorted = True

        txtWieisdemol.Items.Clear()
        For Each item In listKandidaten.Items
            txtWieisdemol.Items.Add(item)
        Next

        txtWieisdemol.Items.Add(getLang("geen"))
    End Sub

    Private Sub FrmOpenTest_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing

        If rSaveAtClose.Checked Then
            'Dim result = MessageBox.Show("Wilt u de wijzigingen opslaan?", "Opslaan?", MessageBoxButtons.YesNo)
            'If result = Windows.Forms.DialogResult.Yes Then
            startedUp = False
            Try
                SaveXML()
                calculateCandidates()
            Catch ex As Exception
                MsgBox(ex.Message, MsgBoxStyle.Exclamation)

            End Try
        End If
        Try
            If (rBackup.Checked = True) And (rGroep.Checked = True) And (My.Settings.folder <> "") Then

                Dim list As New ListBox
                For Each folder In Directory.GetDirectories(My.Settings.folder)
                    If InStr(1, folder, "Back-up") Then
                        list.Items.Add(folder)
                    End If

                Next
                If list.Items.Count > numBackups.Value Then
                    For i = 0 To list.Items.Count - numBackups.Value
                        Dim temp As String = list.Items(i).ToString()
                        My.Computer.FileSystem.DeleteDirectory(temp, DeleteDirectoryOption.DeleteAllContents)
                    Next

                End If

                BackupXML()
            End If
        Catch ex As Exception
        End Try
        My.Settings.Save()
    End Sub

    Private Sub FrmOpenTest_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Me.TabControl1.TabPages.Remove(TabPage7)

        'Loading settings
        LoadSettings()

        ReloadThemes()
        comboThemes.Text = My.Settings.theme
        LoadTheme()

        'Monitor detection
        Dim monitorIndex = 0
        For Each item In Screen.AllScreens
            If item.Primary Then
                rMonitor.Items.Add(
                    Replace((item.DeviceName), "\\.\DISPLAY", "Monitor ") & " (" & getLang("Primair") & ")")
                rMonitor.SelectedIndex = monitorIndex
            Else
                rMonitor.Items.Add(Replace((item.DeviceName), "\\.\DISPLAY", "Monitor "))
            End If
            monitorIndex += 1
        Next

        If My.Settings.rMonitor <> -1 Then
            Try
                rMonitor.SelectedIndex = My.Settings.rMonitor
            Catch ex As Exception

            End Try

        End If


        'Password check
        If My.Settings.password = "" Then
            Show()
        Else
            Hide()
            FrmPassword.ShowDialog()
            If FrmPassword.cancel = True Then
                Application.Exit()
            ElseIf FrmPassword.TextBox1.Text = My.Settings.password Then
                Show()
                txtPassword.Text = My.Settings.password

            Else

                MsgBox(getLang("WrongPass"), MsgBoxStyle.Exclamation)

                Application.Exit()
            End If
        End If

        'Windows Media Player check
        If _
            My.Computer.FileSystem.FileExists(CurDir() & "\Interop.WMPLib.dll") And
            My.Computer.FileSystem.FileExists(CurDir() & "\AxInterop.WMPLib.dll") Then

        Else
            MsgBox(
                "Het lijkt erop dat Interop.WMPLib.dll en AxInterop.WMPLib.dll niet in de map WIDM Exam staan. Hierdoor kan het programma mogelijk niet werken. Gelieve WIDM Exam opnieuw te downloaden.",
                MsgBoxStyle.Critical)
        End If
        Try
            Dim test As New WindowsMediaPlayer

        Catch ex As Exception
            MsgBox(
                "Het lijkt erop dat Windows Media Player niet geïnstalleerd is of dat er een ander probleem mee is. Zonder Windows Media Player kan WIDM Exam niet werken. Installeer Windows Media Player om WIDM Exam te gebruiken." &
                vbCrLf & vbCrLf & ex.Message, MsgBoxStyle.Critical)

        End Try

        Timer1.Start()

        txtResolutie.Text = String.Format(getLang("Resolution"), My.Computer.Screen.Bounds.Width.ToString,
                                          My.Computer.Screen.Bounds.Height.ToString)

        Label34.Text = getLang("Aflevering")

        CalculateSchermen()

        fullscreen()
        Timer1.Start()

        webclient.ScriptErrorsSuppressed = True
        webclient.Navigate("http://widmexam.sourceforge.net/update/widmexam.htm")

        startedUp = True
    End Sub

    Private Sub txtTest_TextChanged(sender As Object, e As EventArgs) Handles txtTest.TextChanged
        If rAlleen.Checked Then
            My.Settings.file = txtTest.Text
        End If

        file = txtTest.Text
    End Sub

    Private Sub Button2_Click_1(sender As Object, e As EventArgs) Handles Button2.Click
        OpenFileDialog3.ShowDialog()
    End Sub

    Private Sub TextBox1_TextChanged(sender As Object, e As EventArgs) Handles txtLogo.TextChanged
        My.Settings.logo = txtLogo.Text
        picLogo.ImageLocation = txtLogo.Text
        If txtLogo.Text = "" Then
            picLogo.Image = My.Resources.SmallLogoDark
        End If
    End Sub

    Private Sub OpenFileDialog3_FileOk(sender As Object, e As CancelEventArgs) Handles OpenFileDialog3.FileOk
        txtLogo.Text = OpenFileDialog3.FileName
    End Sub

    Private Sub ToolStripButton2_Click(sender As Object, e As EventArgs) Handles ToolStripButton2.Click
        webUpdate()
        Try

        Catch ex As Exception

        End Try
        FrmUpdater.ShowDialog()
    End Sub

    Private Sub ToolStripLabel1_Click(sender As Object, e As EventArgs) Handles ToolStripLabel1.Click
        Process.Start("http://koenvh.nl")
    End Sub

    Private Sub ToolStripButton3_Click(sender As Object, e As EventArgs)
        startExecutie()
    End Sub

    Private Sub Button5_Click(sender As Object, e As EventArgs)
        OpenFileDialog4.ShowDialog()
    End Sub

    Private Sub Button4_Click(sender As Object, e As EventArgs)
        SaveFileDialog2.ShowDialog()
    End Sub

    Private Sub SaveFileDialog2_FileOk(sender As Object, e As CancelEventArgs) Handles SaveFileDialog2.FileOk

        Dim myWriter As New StreamWriter(SaveFileDialog2.FileName)

        For Each myItem In listKandidaten.Items
            myWriter.WriteLine(myItem) '// write Item and SubItem.
        Next

        myWriter.Close()
        ' txtKandidaten.Text = SaveFileDialog2.FileName
        listKandidaten.Items.Clear()

        calculateCandidates()
    End Sub

    Private Sub ToolStripButton4_Click(sender As Object, e As EventArgs) Handles ToolStripButton4.Click
        FrmTestMaken.Show()
    End Sub

    Private Sub Button6_Click(sender As Object, e As EventArgs) Handles Button6.Click
        OpenFileDialog5.ShowDialog()
    End Sub

    Private Shared Sub SortIntegerListBox(listBox As ListBox)
        Dim TempList As New List(Of Integer)
        For Each LI In listBox.Items
            TempList.Add(Integer.Parse(LI.ToString()))
        Next
        TempList.Sort()
        listBox.DataSource = TempList
    End Sub

    Private Sub listviewExecutie_KeyDown(sender As Object, e As KeyEventArgs) Handles listviewExecutie.KeyDown
        If e.KeyCode = Keys.Delete Then
            For Each i As ListViewItem In listviewExecutie.SelectedItems
                listviewExecutie.Items.Remove(i)
            Next
        End If
    End Sub

    Sub btnChangeExecutie()
        Try
            For Each li As ListViewItem In listviewExecutie.SelectedItems
                txtListviewAddKandidaat.Text = li.SubItems(0).Text
                txtListviewAntw.Value = li.SubItems(1).Text
                txtListviewTijd.Value = li.SubItems(2).Text
                txtListviewScherm.Text = li.SubItems(3).Text
                txtListViewJokers.Text = li.SubItems(4).Text
            Next
        Catch ex As Exception

        End Try
    End Sub

    Private Sub listviewExecutie_MouseDoubleClick(sender As Object, e As MouseEventArgs) _
        Handles listviewExecutie.MouseDoubleClick
        'listExecutieChangeScherm()
        btnChangeExecutie()
    End Sub

    Private Sub ListView1_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles listviewExecutie.SelectedIndexChanged
        If listviewExecutie.SelectedItems.Count > 0 Then
            ToolStripButton7.Enabled = True
            Button4.Enabled = True
        Else
            ToolStripButton7.Enabled = False
            Button4.Enabled = False
        End If
    End Sub

    Private Sub Button7_Click(sender As Object, e As EventArgs) Handles Button7.Click
        listKandidaten.Items.Add(txtKandidatenAdd.Text)
        txtKandidatenAdd.Clear()
        'saveKandidaten()
        calculateCandidates()
    End Sub

    Private Sub Button8_Click(sender As Object, e As EventArgs) Handles Button8.Click
        'listKandidaten.SelectedItems. = txtKandidatenAdd.Text
        'calculateCandidates()
    End Sub

    Private Sub LinkLabel7_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel7.LinkClicked
        'saveKandidaten()
        calculateCandidates()
        If My.Settings.language = "en" Then
            MsgBox("Saved successfully", MsgBoxStyle.Information)
        Else
            MsgBox("Succesvol opgeslagen", MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub TextBox1_TextChanged_2(sender As Object, e As EventArgs) Handles txtPassword.TextChanged
        My.Settings.password = txtPassword.Text
    End Sub

    Private Sub fullscreen()
    End Sub

    Private Sub CheckBox1_CheckedChanged(sender As Object, e As EventArgs)
        fullscreen()
    End Sub

    Private Sub rOCRAEXT_CheckedChanged(sender As Object, e As EventArgs)
        If rOCRAEXT.Checked Then
            My.Settings.font = True
        Else
            My.Settings.font = False
        End If
    End Sub

    Private Sub Inladen()
        Try
            If IO.File.Exists(My.Settings.folder & "\" & "afl" & numAflevering.Value & ".widmkr") Then _
                '// check if file exists.
                Dim myCoolFileLines() As String =
                        IO.File.ReadAllLines(My.Settings.folder & "\" & "afl" & numAflevering.Value & ".widmkr") _
                '// load your file as a string array.
                For Each line As String In myCoolFileLines '// loop thru array list.
                    Dim lineArray() As String = line.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(lineArray(0)) '// add text Item.
                    newItem.SubItems.Add(lineArray(1))

                    cmAntwoorden.Text = "Ant. goed"
                    newItem.SubItems.Add(lineArray(2)) '// add SubItem.
                    newItem.SubItems.Add(lineArray(3)) '// add SubItem.
                    newItem.SubItems.Add(lineArray(4))

                    listviewExecutie.Items.Add(newItem) '// add Item to ListView.
                Next
            Else
                If startedUp = True Then
                    If My.Settings.language = "en" Then
                        MsgBox("Can't find elimination results for episode " & numAflevering.Value & "!",
                               MsgBoxStyle.Exclamation)
                    Else
                        MsgBox("Kan de executieuitslagen voor aflevering " & numAflevering.Value & " niet vinden!",
                               MsgBoxStyle.Exclamation)
                    End If

                End If
            End If
        Catch ex As Exception

            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ToolStripButton5_Click(sender As Object, e As EventArgs) Handles ToolStripButton5.Click
        selectedLoad = {False, False, True, False}
        If LoadXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Loaded successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol ingeladen!", MsgBoxStyle.Information)
            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Something went wrong when loading!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Er ging iets mis bij het inladen!", MsgBoxStyle.Exclamation)
            End If

        End If
        selectedLoad = {True, True, True, True}
    End Sub

    Private Sub ToolStripButton6_Click(sender As Object, e As EventArgs) Handles ToolStripButton6.Click
        If MsgBox(getLang("ClearListWarning"), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
            '  ListView1.SelectedItems.
            Dim li As ListViewItem


            For Each li In listviewExecutie.Items

                listviewExecutie.Items.Remove(li)
                ' If you only want to remove one item with that Text
                ' you can put an Exit For right here

            Next
        End If
    End Sub

    Private Sub rVast_CheckedChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub rApart_CheckedChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub startTest()

        If Not txtTest.Text = "" Then
            If rWedstrijd.Checked = True And txtWedstrijdFile.Text = "" Then
                If My.Settings.language = "en" Then
                    MsgBox("Choose a path for the competition file first.", MsgBoxStyle.Exclamation)
                Else
                    MsgBox("Kies eerst een opslaglocatie voor het wedstrijdbestand!", MsgBoxStyle.Exclamation)
                End If

            Else
                If rGroep.Checked = True And listKandidaten.Items.Count = 0 Then
                    If My.Settings.language = "en" Then
                        MsgBox(
                            "It's just an idea, but it might be useful to add a few candidates to ""Group mode"". And while you're on it, save them as well.",
                            MsgBoxStyle.Exclamation)
                    Else
                        MsgBox(
                            "Het is enkel een idee, maar misschien is het handig om een aantal kandidaten toe te voegen of in te laden onder ""Groepsmodus"" en deze op te slaan.",
                            MsgBoxStyle.Exclamation)
                    End If
                Else
                    'Console.WriteLine(listKandidaten.Items.Count)
                    If rAlleen.Checked Then
                        file = txtTest.Text
                    Else
                        file = txtFolder.Text & "\afl" & numAflevering.Value & ".widm3"
                    End If
                    If My.Computer.FileSystem.FileExists(file) Then
                        encrypted = False
                        If rGroep.Checked Then
                            Dim result
                            If My.Settings.language = "en" Then
                                result = MessageBox.Show("Are you sure you want to start the quiz", "Start?",
                                                         MessageBoxButtons.YesNo)
                            Else
                                result = MessageBox.Show("Weet u zeker dat u de test wilt starten?", "Starten?",
                                                         MessageBoxButtons.YesNo)
                            End If


                            If result = DialogResult.Yes Then
                                FrmEnterName.Show()
                            End If
                        Else
                            encrypted = False
                            FrmEnterName.Show()
                        End If
                    Else
                        If My.Settings.language = "en" Then
                            MsgBox("File not found!", MsgBoxStyle.Exclamation)
                        Else
                            MsgBox("Bestand niet gevonden!", MsgBoxStyle.Exclamation)
                        End If

                    End If

                End If
            End If
        Else
            If My.Settings.language = "en" Then
                MsgBox("Choose a quiz first!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Kies eerst een test!", MsgBoxStyle.Exclamation)
            End If

        End If
        'If file = "" Then
        '    MsgBox("Het lijkt erop dat er geen test is ingeladen!", MsgBoxStyle.Exclamation)
        'End If
    End Sub

    Private Sub ToolStripButton7_Click(sender As Object, e As EventArgs)
        Try
            listviewExecutie.SelectedItems(0).SubItems(1).Text =
                Val(listviewExecutie.SelectedItems(0).SubItems(1).Text) + Val(1)
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ToolStripButton9_Click(sender As Object, e As EventArgs)
        Dim li As ListViewItem

        Dim i = 0
        For Each li In listviewExecutie.Items
            percentageCache = percentageCache + Me.listviewExecutie.Items(i).SubItems(1).Text
            'ListView1.Items.Remove(li)
            ' If you only want to remove one item with that Text
            ' you can put an Exit For right here
            i = i + 1
        Next
        i = 0
        MsgBox(i)
        MsgBox(percentageCache)
    End Sub

    Private Sub calculatePercentage()
        If rPercentageHandmatig.Checked Then
            percentage = numPercentage.Value
        Else
            Dim cache2 As Double
            Dim cache1 As Double

            percentageCache = 0
            cache1 = 0
            cache2 = 0

            Dim li As ListViewItem

            Dim i = 0
            For Each li In listviewExecutie.Items
                If li.SubItems(0).Text = txtWieisdemol.Text And rFilterMol.Checked Then
                Else
                    percentageCache = percentageCache + Me.listviewExecutie.Items(i).SubItems(1).Text
                End If
                'ListView1.Items.Remove(li)
                ' If you only want to remove one item with that Text
                ' you can put an Exit For right here
                i = i + 1
            Next
            i = 0
            'MsgBox(i)
            'MsgBox(percentageCache)

            Try

                If rFilterMol.Checked Then
                    cache2 = numVragen.Value * (numKandidaten.Value - 1)
                Else
                    cache2 = numVragen.Value * numKandidaten.Value
                End If

                cache1 = percentageCache / cache2
                'MsgBox(cache1)
                percentage = cache1 * 100
                If percentage > 100 Then
                    If My.Settings.language = "en" Then
                        MsgBox(
                            "The percentage is: " & percentage & "%" & vbCrLf &
                            "This is more than a 100%, are you sure this is right?", MsgBoxStyle.Exclamation)
                    Else
                        MsgBox(
                            "Het percentage is: " & percentage & "%" & vbCrLf &
                            "Dit is meer dan 100%, weet u zeker dat dit klopt?", MsgBoxStyle.Exclamation)
                    End If

                End If
            Catch ex As Exception
                If My.Settings.language = "en" Then
                    MsgBox(ex.Message & vbCrLf & "Are you sure the entered data is correct?", MsgBoxStyle.Exclamation)
                Else
                    MsgBox(ex.Message & vbCrLf & "Weet u zeker dat de ingevoerde gegevens kloppen?",
                           MsgBoxStyle.Exclamation)
                End If

            End Try

        End If
    End Sub

    Private Sub startExecutie()
        If rGroep.Checked Then
            If listviewExecutie.Items.Count <> 0 Then
                Dim result
                If My.Settings.language = "en" Then
                    result = MessageBox.Show("Are you sure you want to start the elimination?", "Start?",
                                             MessageBoxButtons.YesNo)
                Else
                    result = MessageBox.Show("Weet u zeker dat u de executie wilt starten?", "Starten?",
                                             MessageBoxButtons.YesNo)
                End If
                If result = DialogResult.Yes Then
                    FrmStartExecutie.Show()
                End If
            Else
                If My.Settings.language = "en" Then
                    MsgBox("It looks like there aren't any results under ""Elimination""", MsgBoxStyle.Exclamation)
                Else
                    MsgBox("Het lijkt erop dat er nog geen uitslagen zijn onder ""Executie""!", MsgBoxStyle.Exclamation)
                End If

            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Group mode needs to be on before the elimination can start", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Groepsmodus moet aanstaan voordat de executie kan starten!", MsgBoxStyle.Exclamation)
            End If

        End If
    End Sub

    Private Sub LinkLabel2_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel2.LinkClicked
        calculatePercentage()
        If My.Settings.language = "en" Then
            MsgBox("The percentage is: " & percentage & "%", MsgBoxStyle.Information)
        Else
            MsgBox("Het percentage is: " & percentage & "%", MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub NumericUpDown1_ValueChanged(sender As Object, e As EventArgs) Handles numInterval.ValueChanged
        FrmPercentage.tmExecutie.Interval = numInterval.Value
    End Sub

    Private Sub CheckBox1_CheckedChanged_1(sender As Object, e As EventArgs) Handles rExecutie.CheckedChanged
        If rExecutie.Checked Then
            numInterval.Enabled = True
        Else
            numInterval.Enabled = False
        End If
    End Sub

    Private Sub Button3_Click_1(sender As Object, e As EventArgs) Handles Button3.Click
        calculatePercentage()

        FrmPercentage.Show()
    End Sub

    Private Sub ToolStripButton10_Click(sender As Object, e As EventArgs)
        calculatePercentage()

        FrmPercentage.Show()
    End Sub

    Private Sub ToolStripButton8_Click(sender As Object, e As EventArgs)
        Try
            listviewExecutie.SelectedItems(0).SubItems(1).Text =
                Val(listviewExecutie.SelectedItems(0).SubItems(1).Text) - Val(1)
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub LinkLabel3_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel3.LinkClicked
        txtLogo.Text = ""
    End Sub
    'Function saveExecutie()
    '    If txtFolder.Text <> "" Then
    '        Dim myWriter As New IO.StreamWriter(txtKandidaten.Text & "r")
    '        For Each myItem As ListViewItem In listviewExecutie.Items
    '            myWriter.WriteLine(myItem.Text & "#" & myItem.SubItems(1).Text & "#" & myItem.SubItems(2).Text & "#" & myItem.SubItems(3).Text) '// write Item and SubItem.
    '        Next
    '        myWriter.Close()
    '        Return True
    '    Else
    '        Return False
    '    End If

    'End Function
    Private Sub ToolStripButton11_Click(sender As Object, e As EventArgs) Handles ToolStripButton11.Click
        If SaveXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Saved successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol opgeslagen", MsgBoxStyle.Information)
            End If
        Else
            If My.Settings.language = "en" Then
                MsgBox("Choose a folder under ""Group mode"" first!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Kies eerst een map onder ""Groepsmodus""!", MsgBoxStyle.Exclamation)
            End If

        End If
    End Sub

    Private Sub listKandidaten_KeyDown(sender As Object, e As KeyEventArgs) Handles listKandidaten.KeyDown
        If e.KeyCode = Keys.Delete Then
            Try
                listKandidaten.Items.Remove(listKandidaten.SelectedItem)
            Catch ex As Exception

            End Try
        End If
    End Sub

    Private Sub ListBox1_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles listKandidaten.SelectedIndexChanged
    End Sub

    Private Sub LinkLabel5_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel5.LinkClicked
        If My.Settings.language = "en" Then
            If _
                MsgBox("Are you sure you want to reset the settings?", MsgBoxStyle.Exclamation Or MsgBoxStyle.YesNo) =
                DialogResult.Yes Then
                My.Settings.Reset()
                MsgBox("Settings set to default." & vbCrLf & "Restart WIDM Exam for the changes to take effect.",
                       MsgBoxStyle.Information)
            End If
        Else
            If _
                MsgBox("Weet je zeker dat je je instellingen terug naar standaard wilt zetten?",
                       MsgBoxStyle.Exclamation Or MsgBoxStyle.YesNo) = DialogResult.Yes Then
                My.Settings.Reset()
                MsgBox(
                    "Instellingen terug naar standaard gezet." & vbCrLf &
                    "Herstart WIDM Exam om de wijzigingen te zien.", MsgBoxStyle.Information)
            End If
        End If
    End Sub

    Private Sub Button9_Click(sender As Object, e As EventArgs) Handles Button9.Click
        startTest()
    End Sub

    Private Sub Button10_Click(sender As Object, e As EventArgs) Handles Button10.Click
        startExecutie()
    End Sub

    Private Sub ToolStripButton10_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton10.Click
        startTest()
    End Sub

    Private Sub ToolStripButton3_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton3.Click
        startExecutie()
    End Sub

    Private Sub ToolStripButton1_Click_2(sender As Object, e As EventArgs)
        calculatePercentage()
        Dim result
        If My.Settings.language = "en" Then
            result = MessageBox.Show("Are you sure that you want to start the percentage?", "Start?",
                                     MessageBoxButtons.YesNo)
        Else
            result = MessageBox.Show("Weet u zeker dat u het percentage wilt starten?", "Starten?",
                                     MessageBoxButtons.YesNo)
        End If
        If result = DialogResult.Yes Then
            FrmPercentage.Show()
        End If
    End Sub

    Private Sub rCombobox_CheckedChanged(sender As Object, e As EventArgs) Handles rCombobox.CheckedChanged
        If rCombobox.Checked Then
            My.Settings.rComboBox = True
        Else
            My.Settings.rComboBox = False
        End If
    End Sub

    Private Sub FrmOpenTest_ResizeEnd(sender As Object, e As EventArgs) Handles Me.ResizeEnd
        If Me.Width < 800 Then
            Me.Width = 800
        End If
        If Me.Height < 576 Then
            Me.Height = 576
        End If
    End Sub

    Private Sub txtKandidatenAdd_KeyDown(sender As Object, e As KeyEventArgs)
    End Sub

    Private Sub txtKandidatenAdd_TextChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub CheckBox1_CheckedChanged_2(sender As Object, e As EventArgs)
    End Sub

    Private Sub rAlleen_CheckedChanged(sender As Object, e As EventArgs) Handles rAlleen.CheckedChanged
        If rAlleen.Checked Then
            My.Settings.groepsmodus = False

            txtTest.Enabled = True
            Button1.Enabled = True
            txtTest.Text = My.Settings.file
            Panel3.Enabled = False

        Else
            My.Settings.groepsmodus = True
            If My.Settings.language = "en" Then
                txtTest.Text = "Group mode is on!"
            Else
                txtTest.Text = "Groepsmodus staat aan!"
            End If
            txtTest.Enabled = False
            Button1.Enabled = False
            Panel3.Enabled = True
            'allesinladen()
        End If
    End Sub

    Private Sub LinkLabel10_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel10.LinkClicked

        MsgBox(getLang("fontMessage"), MsgBoxStyle.Information)
    End Sub

    Private Sub laatsteVraagInladen()
        Try
            If IO.File.Exists(txtFolder.Text & "\afl" & numAflevering.Value & ".widm3l") Then '// check if file exists.
                Dim myCoolFileLines() As String =
                        IO.File.ReadAllLines(txtFolder.Text & "\afl" & numAflevering.Value & ".widm3l") _
                '// load your file as a string array.
                For Each line As String In myCoolFileLines '// loop thru array list.
                    Dim lineArray() As String = line.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(lineArray(0).ToString.PadLeft(3)) '// add text Item.
                    'newItem.SubItems.Add(lineArray(0))
                    'Dim intdots As Integer = 0
                    'For i = 1 To line.Length
                    '    Dim inta As Integer = 0 + 1
                    '    Dim stra As String = line.Substring(inta)
                    '    If stra = "." Then
                    '        intdots = intdots + 1
                    '    End If
                    'Next
                    'If line.Replace("#", "").Count = 3 Then
                    '    MsgBox("")
                    '    newItem.SubItems.Add("Onbekend")
                    '    newItem.SubItems.Add(lineArray(1))
                    '    newItem.SubItems.Add(lineArray(2))
                    'Else

                    Try
                        newItem.SubItems.Add(lineArray(1))
                        newItem.SubItems.Add(lineArray(2))
                        newItem.SubItems.Add(lineArray(3))
                    Catch ex As Exception

                    End Try

                    'End If
                    listAntwoorden.Items.Add(newItem) '// add Item to ListView.
                Next
            Else
                If startedUp = True Then
                    If My.Settings.language = "en" Then
                        MsgBox("Can't find the given answers for episode " & numAflevering.Value & "!",
                               MsgBoxStyle.Exclamation)
                    Else
                        MsgBox("Kan de antwoorden voor aflevering " & numAflevering.Value & " niet vinden!",
                               MsgBoxStyle.Exclamation)
                    End If
                    MsgBox("Kan de antwoorden voor aflevering " & numAflevering.Value & " niet vinden!",
                           MsgBoxStyle.Exclamation)
                End If
            End If
        Catch ex As Exception

            ' MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ToolStripButton12_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton12.Click
        selectedLoad = {False, True, False, False}
        If My.Settings.language = "en" Then
            If LoadXML() = True Then
                MsgBox("Loaded successfully!", MsgBoxStyle.Information)
            Else
                MsgBox("Something went wrong when loading", MsgBoxStyle.Exclamation)
            End If
        Else
            If LoadXML() = True Then
                MsgBox("Succesvol ingeladen!", MsgBoxStyle.Information)
            Else
                MsgBox("Er ging iets mis bij het inladen!", MsgBoxStyle.Exclamation)
            End If
        End If
        selectedLoad = {True, True, True, True}
    End Sub

    Private Sub ToolStripButton13_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton13.Click
        If MsgBox(getLang("ClearListWarning"), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
            Dim li As ListViewItem
            For Each li In listAntwoorden.Items
                listAntwoorden.Items.Remove(li)
            Next
        End If
    End Sub

    Private Sub txtKandidatenAdd_KeyDown1(sender As Object, e As KeyEventArgs) Handles txtKandidatenAdd.KeyDown
        If e.KeyCode = Keys.Enter Then
            e.SuppressKeyPress = True
            listKandidaten.Items.Add(txtKandidatenAdd.Text)
            txtKandidatenAdd.Clear()
            'saveKandidaten()
            calculateCandidates()
        End If
    End Sub

    Private Sub txtKandidatenAdd_TextChanged_1(sender As Object, e As EventArgs) Handles txtKandidatenAdd.TextChanged
    End Sub

    Private Sub Button13_Click(sender As Object, e As EventArgs) Handles Button13.Click
        SaveFileDialog2.ShowDialog()
    End Sub

    Private Sub CheckBox1_CheckedChanged_3(sender As Object, e As EventArgs) Handles rSorting.CheckedChanged
        Dim aa As ListView
        aa = listAntwoorden

        If rSorting.Checked Then
            listAntwoorden.Sorting = SortOrder.Ascending
        Else
            listAntwoorden.Sorting = SortOrder.None
        End If
        Dim li As ListViewItem
        For Each li In listAntwoorden.Items
            listAntwoorden.Items.Remove(li)
        Next

        'If startedUp = True Then
        groepsmodusUpdate()
        'End If
    End Sub

    Private Sub CheckBox1_CheckedChanged_4(sender As Object, e As EventArgs) Handles CheckBox1.CheckedChanged
        If CheckBox1.Checked Then
            txtPassword.PasswordChar = ""
        Else
            txtPassword.PasswordChar = "*"
        End If
    End Sub

    Private Sub Button14_Click(sender As Object, e As EventArgs) Handles Button14.Click
        'FolderBrowserDialog1.RootFolder = Environment.SpecialFolder.MyDocuments
        'FolderBrowserDialog1.ShowDialog()
        If FolderBrowserDialog1.ShowDialog = DialogResult.OK Then
            txtFolder.Text = FolderBrowserDialog1.SelectedPath
        End If
    End Sub

    Private Sub txtFolder_TextChanged(sender As Object, e As EventArgs) Handles txtFolder.TextChanged
        My.Settings.folder = txtFolder.Text
        groepsmodusUpdate()
        'If txtFolder.Text = "" Then
        '    LinkLabel11.Enabled = False
        '    LinkLabel7.Enabled = False
        '    LinkLabel1.Enabled = False
        'Else
        '    LinkLabel11.Enabled = True
        '    LinkLabel7.Enabled = True
        '    LinkLabel1.Enabled = True
        'End If
    End Sub

    Private Sub numAflevering_MouseDown(sender As Object, e As MouseEventArgs) Handles numAflevering.MouseDown
    End Sub

    Private Sub NumericUpDown1_ValueChanged_1(sender As Object, e As EventArgs) Handles numAflevering.ValueChanged
        'If MsgBox(getLang("SaveFirst"), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
        '    Dim currentEpisode As Integer = numAflevering.Value
        '    numAflevering.Value = previousEpisode
        '    SaveXML()
        '    numAflevering.Value = currentEpisode
        'End If
        groepsmodusUpdate()
        My.Settings.aflevering = numAflevering.Value
        If My.Settings.language = "en" Then
            Label34.Text = "Episode: " & numAflevering.Value
        Else
            Label34.Text = "Aflevering: " & numAflevering.Value
        End If
        previousEpisode = numAflevering.Value
    End Sub

    Private Sub Button15_Click(sender As Object, e As EventArgs) Handles Button15.Click

        startTest()
    End Sub

    Private Sub ToolStripButton14_Click(sender As Object, e As EventArgs) Handles ToolStripButton14.Click
        For Each i As ListViewItem In listviewExecutie.SelectedItems
            listviewExecutie.Items.Remove(i)
        Next
    End Sub

    Private Sub LinkLabel11_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel11.LinkClicked
        Try
            If MsgBox(getLang("DeleteEpisode"), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                My.Computer.FileSystem.DeleteFile(My.Settings.folder & "\afl" & numAflevering.Value & ".widm",
                                                  UIOption.AllDialogs, RecycleOption.SendToRecycleBin,
                                                  UICancelOption.ThrowException)
                My.Computer.FileSystem.DeleteFile(My.Settings.folder & "\afl" & numAflevering.Value & ".widm3",
                                                  UIOption.AllDialogs, RecycleOption.SendToRecycleBin,
                                                  UICancelOption.ThrowException)
            End If
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try


        'If My.Computer.FileSystem.FileExists(txtFolder.Text & "\afl" & numAflevering.Value & ".widm3") Then
        'Else
        '    Try
        '        Dim file As System.IO.FileStream
        '        file = System.IO.File.Create(txtFolder.Text & "\afl" & numAflevering.Value & ".widm3")
        '        file.Close()
        '    Catch ex As Exception
        '        If My.Settings.language = "en" Then
        '            MsgBox(ex.Message & vbCrLf & "Check whether you chose a folder", MsgBoxStyle.Exclamation)
        '        Else
        '            MsgBox(ex.Message & vbCrLf & "Controleer of u een map heeft gekozen", MsgBoxStyle.Exclamation)
        '        End If
        '    End Try
        'End If
        'Process.Start("notepad.exe", txtFolder.Text & "\afl" & numAflevering.Value & ".widm3")
    End Sub

    Private Sub SaveFileDialog3_FileOk(sender As Object, e As CancelEventArgs) Handles SaveFileDialog3.FileOk
    End Sub

    Private Sub TestMakenToolStripMenuItem_Click(sender As Object, e As EventArgs)
        SaveFileDialog3.Filter = "WIDM Exam test (*.widm3)|*.widm3"
        'SaveFileDialog3.ShowDialog()
        If SaveFileDialog3.ShowDialog() = DialogResult.OK Then
            Dim file As FileStream
            file = IO.File.Create(SaveFileDialog3.FileName)
            file.Close()
            Process.Start("notepad.exe", SaveFileDialog3.FileName)
        End If
    End Sub

    Private Sub TestBewerkenToolStripMenuItem_Click(sender As Object, e As EventArgs)
        OpenFileDialog6.Filter = "WIDM Exam test (*.widm3)|*.widm3"
        'SaveFileDialog3.ShowDialog()
        If OpenFileDialog6.ShowDialog() = DialogResult.OK Then
            Process.Start("notepad.exe", OpenFileDialog6.FileName)
        End If
    End Sub

    Private Sub HulpNodigToolStripMenuItem_Click(sender As Object, e As EventArgs)
        Try
            Process.Start(CurDir() & "\Documentatie\Test maken.pdf")
        Catch ex As Exception
            If My.Settings.language = "en" Then
                MsgBox(
                    ex.Message & vbCrLf & vbCrLf &
                    "The file couldn't be opened, try to open it manually under Documentatie > Manual.pdf",
                    MsgBoxStyle.Exclamation)
            Else
                MsgBox(
                    ex.Message & vbCrLf & vbCrLf &
                    "Het bestand kon niet worden geopend, probeer het bestand 'Documentatie > Test maken.pdf' handmatig te openen.",
                    MsgBoxStyle.Exclamation)
            End If

        End Try
    End Sub

    Private Sub LinkLabel12_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel12.LinkClicked
        'FrmStartExecutie.SchermstyleGroen()
        FrmExecutie.ShowDialog()

        'FrmStartExecutie.SchermstyleRood()
        FrmExecutie.ShowDialog()
    End Sub

    Private Sub rModern1_CheckedChanged(sender As Object, e As EventArgs) Handles rModern1.CheckedChanged
        If rModern1.Checked Then
            My.Settings.schermstyle = 0
        End If
    End Sub

    Private Sub rModern2_CheckedChanged(sender As Object, e As EventArgs) Handles rModern2.CheckedChanged
        If rModern2.Checked Then
            My.Settings.schermstyle = 1
        End If
    End Sub

    Private Sub rOud_CheckedChanged(sender As Object, e As EventArgs) Handles rOud.CheckedChanged
        If rOud.Checked Then
            My.Settings.schermstyle = 2
        End If
    End Sub

    Private Sub rOud2_CheckedChanged(sender As Object, e As EventArgs) Handles rOud2.CheckedChanged
        If rOud2.Checked Then
            My.Settings.schermstyle = 4
        End If
    End Sub

    Private Sub rwidm3015_1_CheckedChanged(sender As Object, e As EventArgs) Handles rwidm3015_1.CheckedChanged
        If rwidm3015_1.Checked Then
            My.Settings.schermstyle = 5
        End If
    End Sub

    Private Sub rwidm3015_2_CheckedChanged(sender As Object, e As EventArgs) Handles rwidm3015_2.CheckedChanged
        If rwidm3015_2.Checked Then
            My.Settings.schermstyle = 6
        End If
    End Sub

    Private Sub rAangepast_CheckedChanged(sender As Object, e As EventArgs) Handles rAangepast.CheckedChanged
        If rAangepast.Checked Then
            My.Settings.schermstyle = 3
            txtGroenscherm.Enabled = True
            txtRoodscherm.Enabled = True
            Button16.Enabled = True
            Button17.Enabled = True
        Else
            txtGroenscherm.Enabled = False
            txtRoodscherm.Enabled = False
            Button16.Enabled = False
            Button17.Enabled = False
        End If
    End Sub

    Private Sub Button17_Click(sender As Object, e As EventArgs) Handles Button17.Click
        If OpenFileDialog7.ShowDialog = DialogResult.OK Then
            txtRoodscherm.Text = OpenFileDialog7.FileName
        End If
    End Sub

    Private Sub txtRoodscherm_TextChanged(sender As Object, e As EventArgs) Handles txtRoodscherm.TextChanged
        My.Settings.roodscherm = txtRoodscherm.Text
    End Sub

    Private Sub txtGroenscherm_TextChanged(sender As Object, e As EventArgs) Handles txtGroenscherm.TextChanged
        My.Settings.groenscherm = txtGroenscherm.Text
    End Sub

    Private Sub Button16_Click(sender As Object, e As EventArgs) Handles Button16.Click
        If OpenFileDialog8.ShowDialog = DialogResult.OK Then
            txtGroenscherm.Text = OpenFileDialog8.FileName
        End If
    End Sub

    Private Sub ToolStripButton16_Click(sender As Object, e As EventArgs) Handles ToolStripButton16.Click
        FrmOver.Show()
    End Sub

    Private Sub rPercentageAutomatisch_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rPercentageAutomatisch.CheckedChanged
        If rPercentageAutomatisch.Checked Then
            groupPercentageAutomatisch.Enabled = True
            groupPercentageHandmatig.Enabled = False
        Else
            groupPercentageAutomatisch.Enabled = False
            groupPercentageHandmatig.Enabled = True
        End If
    End Sub

    Private Sub listExecutieAdd()
        'If Me.listKandidaten.Items.Contains(txtExecutieAdd.Text) = False Then
        '    MsgBox("Naam komt niet voor in de kandidatenlijst onder groepsmodus!", MsgBoxStyle.Exclamation)
        'Else
        '    listExecutie.Items.Add(txtExecutieAdd.Text)
        '    txtExecutieAdd.Text = ""
        'End If
    End Sub

    Private Sub Button19_Click(sender As Object, e As EventArgs)
        listExecutieAdd()
    End Sub

    Private Sub rExecutieAutomatisch_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rExecutieAutomatisch.CheckedChanged
        'listExecutie.Items.Clear()
        'If rExecutieAutomatisch.Checked Then
        '    Panel1.Enabled = True
        '    Panel4.Enabled = False
        '    listExecutieUpdate()
        '    ' listExecutieUpdate()
        'Else
        '    Panel1.Enabled = False
        '    Panel4.Enabled = True
        '    listExecutieUpdate()
        'End If
    End Sub

    Private Sub listExecutieRemove()
        'listExecutie.Items.Remove(listExecutie.SelectedItem)
    End Sub

    Private Sub Button20_Click(sender As Object, e As EventArgs)
        listExecutieRemove()
    End Sub

    Private Sub txtExecutieAdd_KeyDown(sender As Object, e As KeyEventArgs)
        If e.KeyCode = Keys.Enter Then
            listExecutieAdd()
        End If
    End Sub

    Private Sub txtExecutieAdd_TextChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub listExecutie_KeyDown(sender As Object, e As KeyEventArgs)
        If rExecutieHandmatig.Checked Then
            e.SuppressKeyPress = True
            If e.KeyCode = Keys.Delete Then

                listExecutieRemove()
            End If
        End If
    End Sub

    Private Sub listExecutie_SelectedIndexChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub PictureBox2_Click(sender As Object, e As EventArgs) Handles PictureBox2.Click
    End Sub

    Private Sub PictureBox2_MouseDown(sender As Object, e As MouseEventArgs) Handles PictureBox2.MouseDown
        txtPassword.PasswordChar = ""
    End Sub

    Private Sub PictureBox2_MouseUp(sender As Object, e As MouseEventArgs) Handles PictureBox2.MouseUp
        txtPassword.PasswordChar = "*"
    End Sub

    Private Sub rGroenschermEnabled_CheckedChanged(sender As Object, e As EventArgs)
        'If rGroenschermEnabled.Checked Then
        'Panel5.Enabled = True
        'Else
        'Panel5.Enabled = False
        'End If
    End Sub

    Private Sub ComboBox1_SelectedIndexChanged(sender As Object, e As EventArgs)
        ' listviewExecutie.SelectedItems(0).SubItems(3).Text = ComboBox1.Text
    End Sub

    Private Sub Button21_Click(sender As Object, e As EventArgs) Handles Button21.Click
        'If Me.listKandidaten.Items.Contains(txtListviewAddKandidaat.Text) = False Then
        'MsgBox("Naam komt niet voor in de kandidatenlijst onder groepsmodus!", MsgBoxStyle.Exclamation)
        ' Else
        Dim newItem As New ListViewItem(txtListviewAddKandidaat.Text) '// add text Item.
        newItem.SubItems.Add(txtListviewAntw.Value)

        newItem.SubItems.Add(txtListviewTijd.Value) '// add SubItem.

        newItem.SubItems.Add(txtListviewScherm.Text) '// add SubItem.

        newItem.SubItems.Add(txtListViewJokers.Text)

        listviewExecutie.Items.Add(newItem) '// add Item to ListView.

        txtListviewAddKandidaat.Clear()
        txtListviewAntw.Value = 0
        txtListviewTijd.Value = 0
        txtListViewJokers.SelectedItem = "0"
        'End If

        'txtListviewScherm.SelectedItem = "Groen"
    End Sub

    Private Sub listExecutieChangeScherm()
        Try
            'Dim li As ListViewItem
            'For Each li In listAntwoorden.Items
            '    listAntwoorden.Items.Remove(li)
            'Next
            listviewExecutie.SelectedItems(0).SubItems(3).Text = ToolStripComboBox1.Text
        Catch ex As Exception
            ' MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ToolStripButton17_Click(sender As Object, e As EventArgs) Handles ToolStripButton17.Click
        listExecutieChangeScherm()
        'Try
        '    listviewExecutie.SelectedItems(0).SubItems(3).Text = ToolStripComboBox1.Text
        'Catch ex As Exception
        '    'MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        'End Try
    End Sub

    Private Sub ToolStripButton18_Click(sender As Object, e As EventArgs) Handles ToolStripButton18.Click
        For Each i As ListViewItem In listviewScherm.SelectedItems
            listviewScherm.Items.Remove(i)
        Next
    End Sub

    Private Sub Button19_Click_1(sender As Object, e As EventArgs) Handles Button19.Click
        Dim newItem As New ListViewItem(txtSchermNaam.Text) '// add text Item.
        newItem.SubItems.Add(txtSchermLocatie.Text)
        listviewScherm.Items.Add(newItem) '// add Item to ListView.
        txtSchermNaam.Clear()
        txtSchermLocatie.Clear()
        CalculateSchermen()
    End Sub

    Private Sub CalculateSchermen()
        ToolStripComboBox1.Items.Clear()
        txtListviewScherm.Items.Clear()
        ToolStripComboBox1.Items.Add("Groen")
        ToolStripComboBox1.Items.Add("Rood")
        txtListviewScherm.Items.Add("Groen")
        txtListviewScherm.Items.Add("Rood")
        Dim li As ListViewItem
        For Each li In Me.listviewScherm.Items
            ToolStripComboBox1.Items.Add(li.Text)
            txtListviewScherm.Items.Add(li.Text)
        Next
        ToolStripComboBox1.SelectedItem = "Rood"
        txtListviewScherm.SelectedItem = "Groen"
    End Sub

    Private Sub listviewScherm_MouseDoubleClick(sender As Object, e As MouseEventArgs) _
        Handles listviewScherm.MouseDoubleClick
        Dim li As ListViewItem
        For Each li In listviewScherm.Items
            If li.Selected = True Then
                Try
                    Process.Start(li.SubItems(1).Text)
                Catch ex As Exception

                End Try
                Exit For
            End If

        Next
    End Sub

    Private Sub listviewScherm_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles listviewScherm.SelectedIndexChanged
    End Sub

    Private Sub txtSchermLocatie_MouseClick1(sender As Object, e As MouseEventArgs) Handles txtSchermLocatie.MouseClick
        If OpenFileDialog10.ShowDialog() = DialogResult.OK Then
            txtSchermLocatie.Text = OpenFileDialog10.FileName
        End If
    End Sub

    Private Sub txtSchermLocatie_TextChanged(sender As Object, e As EventArgs) Handles txtSchermLocatie.TextChanged
    End Sub

    Private Sub Button20_Click_1(sender As Object, e As EventArgs) Handles Button20.Click
        If OpenFileDialog10.ShowDialog() = DialogResult.OK Then
            txtSchermLocatie.Text = OpenFileDialog10.FileName
        End If
    End Sub

    Private Sub ToolStripButton19_Click(sender As Object, e As EventArgs) Handles ToolStripButton19.Click
        'If SaveFileDialog4.ShowDialog() = Windows.Forms.DialogResult.OK Then
        'If My.Settings.folder <> "" Then
        '    Dim myWriter As New IO.StreamWriter(My.Settings.folder & "\schermen.widms")
        '    For Each myItem As ListViewItem In listviewScherm.Items
        '        myWriter.WriteLine(myItem.Text & "#" & myItem.SubItems(1).Text) '// write Item and SubItem.
        '    Next
        '    myWriter.Close()
        '    MsgBox("Succesvol opgeslagen in " & My.Settings.folder & "\schermen.widms", MsgBoxStyle.Information)
        '    My.Settings.schermenlijstloc = My.Settings.folder & "\schermen.widms"
        'Else
        '    MsgBox("Kies eerst een map onder ""Groepsmodus"" alvorens aangepaste schermen op te slaan!", MsgBoxStyle.Exclamation)
        'End If
        If SaveXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Saved successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol opgeslagen!", MsgBoxStyle.Information)
            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Something went wrong when saving!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Er ging iets mis bij het opslaan!", MsgBoxStyle.Exclamation)
            End If

        End If
    End Sub

    Private Sub SchermenInladen()
        Try
            If IO.File.Exists(My.Settings.schermenlijstloc) Then '// check if file exists.
                Dim myCoolFileLines() As String = IO.File.ReadAllLines(My.Settings.schermenlijstloc) _
                '// load your file as a string array.
                For Each line As String In myCoolFileLines '// loop thru array list.
                    Dim lineArray() As String = line.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(lineArray(0)) '// add text Item.
                    newItem.SubItems.Add(lineArray(1))
                    listviewScherm.Items.Add(newItem) '// add Item to ListView.
                Next
            Else
                If startedUp = True Then
                    If My.Settings.language = "en" Then
                        MsgBox("Can't find the screen list!", MsgBoxStyle.Exclamation)
                    Else
                        MsgBox("Kan de schermenlijst niet vinden!", MsgBoxStyle.Exclamation)
                    End If

                End If
            End If
        Catch ex As Exception

            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
        CalculateSchermen()
    End Sub

    Private Sub ToolStripButton20_Click(sender As Object, e As EventArgs) Handles ToolStripButton20.Click
        If OpenFileDialog11.ShowDialog() = DialogResult.OK Then
            My.Settings.schermenlijstloc = OpenFileDialog11.FileName
            SchermenInladen()
        End If
    End Sub

    Private Sub ToolStripComboBox1_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles ToolStripComboBox1.SelectedIndexChanged
        listExecutieChangeScherm()
    End Sub

    Private Sub ToolStripButton21_Click(sender As Object, e As EventArgs) Handles ToolStripButton21.Click
        If SaveXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Saved successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol opgeslagen!", MsgBoxStyle.Information)
            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Something went wrong when saving!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Er ging iets mis bij het opslaan!", MsgBoxStyle.Exclamation)
            End If

        End If
    End Sub

    Private Sub ToolStripButton22_Click(sender As Object, e As EventArgs) Handles ToolStripButton22.Click
        listKandidaten.Items.Remove(listKandidaten.SelectedItem)
        calculateCandidates()
    End Sub

    Private Sub ToolStripButton25_Click(sender As Object, e As EventArgs) Handles ToolStripButton25.Click
        For Each i As ListViewItem In listAntwoorden.SelectedItems
            listAntwoorden.Items.Remove(i)
        Next
    End Sub

    Function saveAnswers()
        If txtFolder.Text <> "" Then
            Dim myWriter As New StreamWriter(txtFolder.Text & "\afl" & numAflevering.Value & ".widm3l")
            For Each myItem As ListViewItem In listAntwoorden.Items
                myWriter.WriteLine(
                    myItem.Text & "#" & myItem.SubItems(1).Text & "#" & myItem.SubItems(2).Text & "#" &
                    myItem.SubItems(3).Text) '// write Item and SubItem.
            Next
            myWriter.Close()
            Return True
        Else
            Return False
        End If
    End Function

    Private Sub ToolStripButton26_Click(sender As Object, e As EventArgs) Handles ToolStripButton26.Click
        If SaveXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Saved successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol opgeslagen", MsgBoxStyle.Information)
            End If
        Else
            If My.Settings.language = "en" Then
                MsgBox("Choose a folder under ""Group mode"" first!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Kies eerst een map onder ""Groepsmodus""!", MsgBoxStyle.Exclamation)
            End If

        End If
    End Sub

    Private Sub ToolStripButton27_Click(sender As Object, e As EventArgs) Handles ToolStripButton27.Click
        'Dim Write As New System.IO.StreamWriter(txtFolder.Text & "\afl" & numAflevering.Value + 1 & ".widmk")
        'Dim Read As New System.IO.StreamReader(txtFolder.Text & "\afl" & numAflevering.Value & ".widmk")
        'Write.Write(Read.ReadToEnd)
        'Read.Close()
        'Write.Close()
        SaveXML()
        Dim templist As New ListBox
        For Each item In listKandidaten.Items
            templist.Items.Add(item)
        Next
        numAflevering.Value = numAflevering.Value + 1
        For Each item In templist.Items
            listKandidaten.Items.Add(item)
        Next
        SaveXML()
        If My.Settings.language = "en" Then
            MsgBox("Candidates were copied!", MsgBoxStyle.Information)
        Else
            MsgBox("Kandidaten gekopieerd!", MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub Button22_Click(sender As Object, e As EventArgs) Handles Button22.Click
        FrmTestMaken.Show()
    End Sub

    Private Sub listAntwoorden_KeyDown(sender As Object, e As KeyEventArgs) Handles listAntwoorden.KeyDown
        If e.KeyCode = Keys.Delete Then
            For Each i As ListViewItem In listAntwoorden.SelectedItems
                listAntwoorden.Items.Remove(i)
            Next
        End If
    End Sub

    Private Sub YouTubeUitlegvideoToolStripMenuItem_Click(sender As Object, e As EventArgs)
    End Sub

    Private Sub rOudeMuziek_CheckedChanged(sender As Object, e As EventArgs) Handles rOudeMuziek.CheckedChanged
        If rOudeMuziek.Checked Then
            My.Settings.oudemuziek = True
        Else
            My.Settings.oudemuziek = False
        End If
    End Sub

    Private Sub ToolStripButton28_Click(sender As Object, e As EventArgs)
    End Sub

    Private Sub PictureBox3_Click(sender As Object, e As EventArgs)
    End Sub

    Private Sub numRuimteTussenAntwoorden_ValueChanged(sender As Object, e As EventArgs) _
        Handles numRuimteTussenAntwoorden.ValueChanged
    End Sub
    'Sub installocraext()
    '    Try
    '        Dim process As System.Diagnostics.Process = Nothing
    '        Dim processStartInfo As System.Diagnostics.ProcessStartInfo
    '        processStartInfo = New System.Diagnostics.ProcessStartInfo()
    '        processStartInfo.FileName = CurDir() & "\OCR A Extended\OCR A Extended installer.exe"
    '        processStartInfo.Verb = "runas"

    '        processStartInfo.Arguments = "/silent"
    '        processStartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal
    '        processStartInfo.UseShellExecute = True
    '        process = System.Diagnostics.Process.Start(processStartInfo)


    '        ' If process.Then Then
    '        ' System.Threading.Thread.Sleep(2000)
    '        ' If Dir("C:\Windows\Fonts\OCRAEXT.TTF") <> "" Then
    '        If My.Settings.language = "en" Then
    '            btnOCRAEXT.Text = "OCR A Extended is installed!"
    '        Else
    '            btnOCRAEXT.Text = "OCR A Extended is geïnstalleerd!"
    '        End If

    '        btnOCRAEXT.Enabled = False
    '        rOCRAEXT.Checked = True
    '        ' End If
    '        ' End If
    '    Catch ex As Exception

    '    End Try
    'End Sub
    'Private Sub Button11_Click_2(sender As Object, e As EventArgs)
    '    installocraext()
    'End Sub

    Private Sub LinkLabel6_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel6.LinkClicked
        Dim lv As ListViewItem
        Dim lowestscoreName = ""
        Dim lowestscoreScore As Integer
        Dim lowestscoreTime As Integer
        For Each lv In listviewExecutie.Items
            If lv.SubItems(0).Text <> txtWieisdemol.Text And lv.SubItems(4).Text <> "Vrijstelling" Then
                If lowestscoreName = "" Then
                    lowestscoreName = lv.SubItems(0).Text
                    lowestscoreScore = Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)
                    lowestscoreTime = lv.SubItems(2).Text
                Else
                    'MsgBox(lv.SubItems(0).Text & " " & (Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)))
                    'MsgBox(lowestscoreScore + Val(lv.SubItems(4).Text))
                    If (Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)) < lowestscoreScore Then
                        'MsgBox(lv.SubItems(0).Text & " | PLACE | " & lv.SubItems(1).Text + Val(lv.SubItems(4).Text))
                        lowestscoreName = lv.SubItems(0).Text
                        lowestscoreScore = Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)
                        lowestscoreTime = lv.SubItems(2).Text
                    ElseIf Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text) = (lowestscoreScore) Then
                        If lv.SubItems(2).Text > lowestscoreTime Then
                            lowestscoreName = lv.SubItems(0).Text
                            lowestscoreScore = Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)
                            lowestscoreTime = lv.SubItems(2).Text
                            'MsgBox(lv.SubItems(0).Text & " | TIME | " & lowestscoreScore)
                        End If
                    End If
                End If
            End If
        Next
        Dim result
        If My.Settings.language = "en" Then
            result =
                MessageBox.Show(
                    "The candidate with the lowest score is: " & lowestscoreName & vbCrLf &
                    "Do you want to give this candidate a red screen?" & vbCrLf & vbCrLf &
                    "Attention! This candidate can be The Mole!" & vbCrLf & "(Unless entered under group mode)",
                    "Red screen?", MessageBoxButtons.YesNo)
        Else
            result =
                MessageBox.Show(
                    "De kandidaat met de laagste score is: " & lowestscoreName & vbCrLf &
                    "Wilt u deze kandidaat een rood scherm geven?" & vbCrLf & vbCrLf &
                    "Let op! Deze kandidaat kan de mol zijn!" & vbCrLf &
                    "(Tenzij de mol onder groepsmodus is aangegeven)", "Rood scherm?", MessageBoxButtons.YesNo)
        End If

        If result = DialogResult.Yes Then
            For Each lvitem As ListViewItem In listviewExecutie.Items
                If lvitem.SubItems(0).Text = lowestscoreName Then
                    lvitem.SubItems(3).Text = "Rood"
                    Exit For
                End If
            Next
        End If
        'MsgBox("De kandidaat met de laagste score is: " & lowestscoreName, MsgBoxStyle.Information)
    End Sub

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        webUpdate()
    End Sub

    Private Sub LinkLabel9_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel9.LinkClicked
        If My.Settings.language = "en" Then
            MsgBox("Competition:" & vbCrLf &
                   "Only usable in alone mode. A file will be created after the quiz. This file can be send to others and loaded.",
                   MsgBoxStyle.Information)
        Else
            MsgBox("Wedstrijd:" & vbCrLf &
                   "Alleen te gebruiken in alleenmodus. Er zal na de test een bestand opgeslagen worden welke aan anderen kan worden gegeven en ingeladen kan worden.",
                   MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub rWedstrijd_CheckedChanged(sender As Object, e As EventArgs) Handles rWedstrijd.CheckedChanged
        My.Settings.rWedstrijd = rWedstrijd.Checked
        If rWedstrijd.Checked Then
            Panel5.Enabled = True
        Else
            Panel5.Enabled = False
        End If
    End Sub

    Sub openWedstrijdBestand()
        If OpenFileDialog12.ShowDialog() = DialogResult.OK Then
            Dim hashfile = ""
            Dim resultfile = ""
            Dim answersfile = ""
            Dim document As XmlReader = New XmlTextReader(OpenFileDialog12.FileName)

            While (document.Read())

                Dim type = document.NodeType
                If (type = XmlNodeType.Element) Then
                    If (document.Name = "hash") Then
                        hashfile = document.ReadInnerXml.ToString
                    End If
                    If document.Name = "result" Then
                        resultfile = document.ReadInnerXml.ToString
                    End If
                    If document.Name = "answers" Then
                        answersfile = document.ReadInnerXml.ToString
                    End If
                End If
            End While

            document.Close()

            'Dim lines() As String = IO.File.ReadAllLines(OpenFileDialog12.FileName)
            Dim source As String = resultfile

            Using md5Hash As MD5 = MD5.Create()

                Dim hash As String = hashfile

                If VerifyMd5Hash(md5Hash, [source], hash) Then
                    Dim lineArray() As String = resultfile.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(lineArray(0)) '// add text Item.
                    newItem.SubItems.Add(lineArray(1))
                    newItem.SubItems.Add(lineArray(2)) '// add SubItem.
                    newItem.SubItems.Add(lineArray(3)) '// add SubItem.
                    newItem.SubItems.Add(lineArray(4))

                    listviewExecutie.Items.Add(newItem) '// add Item to ListView.

                    '-------

                    Dim strLine() As String = answersfile.Split(vbNewLine)
                    For Each item As String In strLine '// loop thru array list.
                        If item.Contains("#") Then
                            Dim lineArray2() As String = item.Split("#") '// separate by "#" character.
                            Dim newItem2 As New ListViewItem(lineArray2(0)) '// add text Item.
                            'newItem.SubItems.Add(lineArray(0))
                            Dim intdots = 0
                            For i = 1 To item.Length
                                Dim inta As Integer = 0 + 1
                                Dim stra As String = item.Substring(inta)
                                If stra = "." Then
                                    intdots = intdots + 1
                                End If
                            Next
                            If intdots = 2 Then
                                MsgBox("")
                                newItem2.SubItems.Add("Onbekend")
                                newItem2.SubItems.Add(lineArray2(1))
                                newItem2.SubItems.Add(lineArray2(2))
                            Else
                                newItem2.SubItems.Add(lineArray2(1))
                                newItem2.SubItems.Add(lineArray2(2))
                                Try
                                    newItem2.SubItems.Add(lineArray2(3))
                                Catch ex As Exception

                                End Try

                            End If
                            listAntwoorden.Items.Add(newItem2) '// add Item to ListView.
                        End If

                    Next
                Else
                    If My.Settings.language = "en" Then
                        MsgBox("The controle code doesn't correspond to the given answers.")
                    Else
                        MsgBox("De controlecode komt niet overeen met de gegeven antwoorden.")
                    End If

                End If
            End Using
        End If
    End Sub

    Private Sub ToolStripButton28_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton28.Click
        openWedstrijdBestand()
    End Sub

    Shared Function GetMd5Hash(md5Hash As MD5, input As String) As String

        ' Convert the input string to a byte array and compute the hash. 
        Dim data As Byte() = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(input))

        ' Create a new Stringbuilder to collect the bytes 
        ' and create a string. 
        Dim sBuilder As New StringBuilder()

        ' Loop through each byte of the hashed data  
        ' and format each one as a hexadecimal string. 
        Dim i As Integer
        For i = 0 To data.Length - 1
            sBuilder.Append(data(i).ToString("x2"))
        Next i

        ' Return the hexadecimal string. 
        Return sBuilder.ToString()
    End Function 'GetMd5Hash

    Shared Function VerifyMd5Hash(md5Hash As MD5, input As String, hash As String) As Boolean
        ' Hash the input. 
        Dim hashOfInput As String = GetMd5Hash(md5Hash, input)

        ' Create a StringComparer an compare the hashes. 
        Dim comparer As StringComparer = StringComparer.OrdinalIgnoreCase

        If 0 = comparer.Compare(hashOfInput, hash) Then
            Return True
        Else
            Return False
        End If
    End Function 'VerifyMd5Hash

    Private Sub ToolStripButton29_Click(sender As Object, e As EventArgs) Handles ToolStripButton29.Click
        openWedstrijdBestand()
    End Sub

    Private Sub Button11_Click_3(sender As Object, e As EventArgs) Handles Button11.Click
        If SaveFileDialog5.ShowDialog() = DialogResult.OK Then
            txtWedstrijdFile.Text = SaveFileDialog5.FileName
        End If
    End Sub

    Private Sub txtWedstrijdFile_TextChanged(sender As Object, e As EventArgs) Handles txtWedstrijdFile.TextChanged
        My.Settings.wedstrijdfile = txtWedstrijdFile.Text
    End Sub

    Private Sub LinkLabel13_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel13.LinkClicked
        ' listAntwoorden.Sorting = SortOrder.Ascending
    End Sub

    Sub allesinladen()
        LoadXML()
    End Sub

    Private Sub Button12_Click_1(sender As Object, e As EventArgs) Handles Button12.Click
        allesinladen()
    End Sub

    Private Sub ToolStripButton15_Click(sender As Object, e As EventArgs)
        allesinladen()
    End Sub

    Private Sub rStandaardInladen_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rStandaardInladen.CheckedChanged
        My.Settings.standaardinladen = rStandaardInladen.CheckState
    End Sub

    Private Sub rThreeRows_CheckedChanged(sender As Object, e As EventArgs) Handles rThreeRows.CheckedChanged
        My.Settings.threerows = rThreeRows.CheckState
    End Sub

    Private Sub ToolStripButton30_Click(sender As Object, e As EventArgs) Handles ToolStripButton30.Click
        'Dim sortCheckState As Boolean = rSorting.Checked
        'rSorting.Checked = True
        If SaveFileDialog6.ShowDialog() = DialogResult.OK Then
            Dim Write As New StreamWriter(SaveFileDialog6.FileName)
            Dim questionnumber = 1
            Dim previousnumber = 0
            Write.Write(My.Resources.htmlExport01)
            If My.Settings.language = "en" Then
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>#</th>" & vbCrLf & "<th>Question</th>" & vbCrLf & "<th>Candidate</th>" &
                    vbCrLf & "<th>Answer</th>" & vbCrLf & "</tr>")
            Else
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>#</th>" & vbCrLf & "<th>Vraag</th>" & vbCrLf & "<th>Kandidaat</th>" & vbCrLf &
                    "<th>Antwoord</th>" & vbCrLf & "</tr>")
            End If

            For Each item As ListViewItem In listAntwoorden.Items
                questionnumber = item.SubItems(0).Text
                If questionnumber = previousnumber Then
                    Write.WriteLine("<tr>")
                    Write.WriteLine("<td>" & item.SubItems(2).Text & "</td>")
                    Try
                        Write.WriteLine("<td>" & item.SubItems(3).Text & "</td>")
                    Catch ex As Exception

                    End Try

                    Write.WriteLine("</tr>")
                Else
                    Dim candidateCount = 0
                    previousnumber = item.SubItems(0).Text
                    For Each candidate As ListViewItem In listAntwoorden.Items
                        If candidate.SubItems(0).Text = questionnumber Then
                            candidateCount = candidateCount + 1
                        End If
                    Next
                    Write.WriteLine("<tr>")
                    Write.WriteLine("<td rowspan=""" & candidateCount & """>" & item.SubItems(0).Text & "</td>")
                    Write.WriteLine("<td rowspan=""" & candidateCount & """>" & item.SubItems(1).Text & "</td>")
                    Write.WriteLine("<td>" & item.SubItems(2).Text & "</td>")
                    Try
                        Write.WriteLine("<td>" & item.SubItems(3).Text & "</td>")
                    Catch ex As Exception

                    End Try
                    Write.WriteLine("</tr>")
                End If
            Next
            Write.WriteLine("</table>")
            If My.Settings.language = "en" Then
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print this page</a></p>")
            Else
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print deze pagina</a></p>")
            End If
            Write.WriteLine("</body>")
            Write.WriteLine("</html>")
            Write.Close()

            'rSorting.Checked = sortCheckState
            Try
                Process.Start(SaveFileDialog6.FileName)
            Catch ex As Exception

            End Try

        End If
    End Sub

    Private Sub ToolStripButton31_Click(sender As Object, e As EventArgs) Handles ToolStripButton31.Click
        'If OpenFileDialog11.ShowDialog() = Windows.Forms.DialogResult.OK Then
        'If My.Settings.folder <> "" Then
        '    My.Settings.schermenlijstloc = My.Settings.folder & "\schermen.widms"
        '    SchermenInladen()
        'Else
        '    MsgBox("Kies eerst een map onder ""Groepsmodus"" alvorens de aangepaste schermen in te laden.", MsgBoxStyle.Exclamation)
        'End If
        selectedLoad = {False, False, False, True}
        If LoadXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Loaded successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol ingeladen!", MsgBoxStyle.Information)
            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Something went wrong when loading!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Er ging iets mis bij het inladen!", MsgBoxStyle.Exclamation)
            End If

        End If
        selectedLoad = {True, True, True, True}
    End Sub

    Private Sub rRemoveCandidate_CheckedChanged(sender As Object, e As EventArgs) Handles rVerwijderNaam.CheckedChanged
        My.Settings.rVerwijderNaam = rVerwijderNaam.Checked
    End Sub

    Private Sub CheckBox2_CheckedChanged(sender As Object, e As EventArgs) Handles rSaveAtClose.CheckedChanged
        If rSaveAtClose.Checked Then
            My.Settings.saveatclose = True
        Else
            My.Settings.saveatclose = False
        End If
    End Sub

    Private Sub ToolStripButton32_Click(sender As Object, e As EventArgs) Handles ToolStripButton32.Click
    End Sub

    Private Sub LinkLabel15_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs)
        Process.Start(
            "https://pattersonsupport.custhelp.com/app/answers/detail/a_id/13103/~/how-to-change-dpi-settings-in-windows-7")
    End Sub

    Private Sub LinkLabel14_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel14.LinkClicked
        Process.Start("http://koenvh.nl/widm")
    End Sub

    Private Sub LinkLabel16_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel16.LinkClicked
        My.Settings.Upgrade()
        If My.Settings.language = "en" Then
            MsgBox("The settings are imported. Restart WIDM Exam for the changes to take effect.",
                   MsgBoxStyle.Information)
        Else
            MsgBox("Instellingen zijn geimporteerd. Herstart WIDM Exam om de wijzigingen te zien.",
                   MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub ToolStripButton33_Click(sender As Object, e As EventArgs) Handles ToolStripButton33.Click
        Try
            If My.Settings.language = "en" Then
                If My.Computer.FileSystem.FileExists(CurDir() & "\Documentation\WIDM Exam manual.pdf") Then
                    Process.Start(CurDir() & "\Documentation\WIDM Exam manual.pdf")
                Else
                    Process.Start(CurDir() & "\Documentatie\WIDM Exam manual.pdf")
                End If
            Else
                If My.Computer.FileSystem.FileExists(CurDir() & "\Documentation\WIDM Exam manual.pdf") Then
                    Process.Start(CurDir() & "\Documentation\WIDM Exam handleiding.pdf")
                Else
                    Process.Start(CurDir() & "\Documentatie\WIDM Exam handleiding.pdf")
                End If
            End If

        Catch ex As Exception
            If My.Settings.language = "en" Then
                MsgBox("The manual could not be opened! Please try to open it manually." & vbCrLf & "(Ba dum tsh)",
                       MsgBoxStyle.Exclamation)
            Else
                MsgBox("De handleiding kon niet geopend worden. Probeer deze handmatig te openen!",
                       MsgBoxStyle.Exclamation)
            End If
        End Try
    End Sub

    Private Sub rExecutiePauze_CheckedChanged(sender As Object, e As EventArgs) Handles rLangereGeluiden.CheckedChanged
        My.Settings.rLangereGeluiden = rLangereGeluiden.Checked
    End Sub

    Private Sub rMuziekAfspelen_CheckedChanged(sender As Object, e As EventArgs) Handles rMuziekAfspelen.CheckedChanged
        My.Settings.rMuziekAfspelen = rMuziekAfspelen.Checked
    End Sub

    Private Sub rMusic_CheckedChanged(sender As Object, e As EventArgs) Handles rAfscheidsmuziek.CheckedChanged
        My.Settings.rAfscheidsmuziek = rAfscheidsmuziek.Checked
    End Sub

    Private Sub rSchermGeluid_CheckedChanged(sender As Object, e As EventArgs) Handles rSchermGeluid.CheckedChanged
        My.Settings.rSchermGeluid = rSchermGeluid.Checked
    End Sub

    Private Sub rContinuePlaying_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rMuziekDoorspelen.CheckedChanged
        My.Settings.rMuziekDoorspelen = rMuziekDoorspelen.Checked
    End Sub

    Private Sub Button18_Click(sender As Object, e As EventArgs) Handles Button18.Click
        'Dim sDialog As New SaveFileDialog()
        'sDialog.DefaultExt = ".txt"
        'sDialog.Filter = "txt|*.txt"

        'If sDialog.ShowDialog() = DialogResult.OK Then

        '    Using sWriter As New System.IO.StreamWriter(sDialog.FileName)

        '        For i As Integer = Me.Controls.Count - 1 To 0 Step -1

        '            sWriter.WriteLine(Me.Controls(i).Name & "," & Me.Controls(i).Text)

        '        Next

        '    End Using

        '    My.Settings.Save()
        '    If My.Settings.language = "en" Then
        '        MessageBox.Show("Settings are exported.", "Export", MessageBoxButtons.OK, MessageBoxIcon.Information)
        '    Else
        '        MessageBox.Show("Instellingen zijn geëxporteerd.", "Exporteren", MessageBoxButtons.OK, MessageBoxIcon.Information)
        '    End If


        'End If
        MsgBox(Thread.CurrentThread.CurrentUICulture.DisplayName)
    End Sub

    Private Sub Button23_Click(sender As Object, e As EventArgs) Handles Button23.Click
        LoadXML()
    End Sub

    Private Sub Button24_Click(sender As Object, e As EventArgs)
    End Sub

    Private Sub ToolStripButton34_Click(sender As Object, e As EventArgs) Handles ToolStripButton34.Click
        Try
            Dim r As StreamReader
            r = New StreamReader(My.Settings.folder & "\" & "afl" & numAflevering.Value & ".widmk")
            While (r.Peek() > -1)
                listKandidaten.Items.Add(r.ReadLine)
            End While
            r.Close()
        Catch ex As Exception

        End Try
    End Sub

    Private Sub ToolStripButton35_Click(sender As Object, e As EventArgs) Handles ToolStripButton35.Click
        laatsteVraagInladen()
    End Sub

    Private Sub ToolStripButton36_Click(sender As Object, e As EventArgs) Handles ToolStripButton36.Click
        Inladen()
    End Sub

    Private Sub PictureBox1_Click(sender As Object, e As EventArgs)
    End Sub

    Private Sub ToolStripButton24_Click(sender As Object, e As EventArgs) Handles ToolStripButton24.Click
        selectedLoad = {True, False, False, False}
        If LoadXML() = True Then
            If My.Settings.language = "en" Then
                MsgBox("Loaded successfully", MsgBoxStyle.Information)
            Else
                MsgBox("Succesvol ingeladen!", MsgBoxStyle.Information)
            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Something went wrong when loading!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Er ging iets mis bij het inladen!", MsgBoxStyle.Exclamation)
            End If

        End If
        selectedLoad = {True, True, True, True}
    End Sub

    Private Sub ToolStripButton23_Click(sender As Object, e As EventArgs) Handles ToolStripButton23.Click
        If MsgBox(getLang("ClearListWarning"), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
            listKandidaten.Items.Clear()
        End If
    End Sub

    Private Sub PictureBox1_Click_1(sender As Object, e As EventArgs) Handles PictureBox1.Click
        calculateCandidates()
    End Sub

    Private Sub Button4_Click_1(sender As Object, e As EventArgs) Handles Button4.Click
        For Each li As ListViewItem In listviewExecutie.SelectedItems
            li.SubItems(0).Text = txtListviewAddKandidaat.Text
            li.SubItems(1).Text = txtListviewAntw.Value
            li.SubItems(2).Text = txtListviewTijd.Value
            li.SubItems(3).Text = txtListviewScherm.Text
            li.SubItems(4).Text = txtListViewJokers.Text
            txtListviewAddKandidaat.Text = ""
            txtListviewAntw.Value = 0
            txtListviewTijd.Value = 0
            txtListviewScherm.SelectedItem = "Groen"
            txtListViewJokers.SelectedItem = "0"
        Next
    End Sub

    Private Sub ToolStripButton7_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton7.Click
        btnChangeExecutie()
    End Sub

    Private Sub rGeluidTest_CheckedChanged(sender As Object, e As EventArgs) Handles rGeluidTest.CheckedChanged
        My.Settings.rGeluidTest = rGeluidTest.CheckState
    End Sub

    Private Sub LinkLabel17_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel17.LinkClicked
        Dim lv As ListViewItem
        Dim highestName = ""
        Dim highestScore As Integer
        Dim highestTime As Integer
        For Each lv In listviewExecutie.Items
            If lv.SubItems(0).Text <> txtWieisdemol.Text Then
                If highestName = "" Then
                    highestName = lv.SubItems(0).Text
                    highestScore = lv.SubItems(1).Text + Val(lv.SubItems(4).Text) 'Val("Vrijstelling") = 0
                    highestTime = lv.SubItems(2).Text
                Else
                    If lv.SubItems(1).Text + Val(lv.SubItems(4).Text) > highestScore Then
                        highestName = lv.SubItems(0).Text
                        highestScore = lv.SubItems(1).Text + Val(lv.SubItems(4).Text)
                        highestTime = lv.SubItems(2).Text
                    ElseIf lv.SubItems(1).Text + Val(lv.SubItems(4).Text) = highestScore Then
                        If lv.SubItems(2).Text < highestTime Then
                            highestName = lv.SubItems(0).Text
                            highestScore = lv.SubItems(1).Text + Val(lv.SubItems(4).Text)
                            highestTime = lv.SubItems(2).Text
                        End If
                    End If
                End If
            End If
        Next
        Dim result
        If My.Settings.language = "en" Then
            result =
                MessageBox.Show(
                    "The candidate with the highest score is: " & highestName & vbCrLf &
                    "Do you want to give a red screen to the other candidates?" & vbCrLf & vbCrLf &
                    "Attention! This candidate could be The Mole!" & vbCrLf &
                    "(Unless The Mole is entered under group mode)", "Red screen?", MessageBoxButtons.YesNo)
        Else
            result =
                MessageBox.Show(
                    "De kandidaat met de hoogste score is: " & highestName & vbCrLf &
                    "Wilt u de andere kandidaten een rood scherm geven?" & vbCrLf & vbCrLf &
                    "Let op! Deze kandidaat kan de mol zijn!" & vbCrLf &
                    "(Tenzij de mol onder groepsmodus is aangegeven)", "Rood scherm?", MessageBoxButtons.YesNo)
        End If

        If result = DialogResult.Yes Then
            For Each lvitem As ListViewItem In listviewExecutie.Items
                If Not lvitem.SubItems(0).Text = highestName Then
                    lvitem.SubItems(3).Text = "Rood"
                    'Exit For
                End If
            Next
        End If
    End Sub

    Private Sub LinkLabel18_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel18.LinkClicked
        exportSettings()
    End Sub

    Private Sub LinkLabel19_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel19.LinkClicked
        importSettings()
    End Sub

    Private Sub EnglishToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles EnglishToolStripMenuItem.Click
        My.Settings.language = "en"
        Thread.CurrentThread.CurrentUICulture = New CultureInfo("EN")
        btnLanguage.Image = My.Resources.gb
        Dim result =
                MessageBox.Show(
                    "Please restart WIDM Exam for the changes to take effect." & vbCrLf & "Do you want to restart now?",
                    "Restart", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
        If result = MsgBoxResult.Yes Then
            Application.Restart()
        End If
    End Sub

    Private Sub NederlandsToolStripMenuItem_Click(sender As Object, e As EventArgs) _
        Handles NederlandsToolStripMenuItem.Click
        My.Settings.language = "nl"
        Thread.CurrentThread.CurrentUICulture = New CultureInfo("NL")
        btnLanguage.Image = My.Resources.nl
        Dim result =
                MessageBox.Show(
                    "Herstart WIDM Exam om de wijzigingen te zien." & vbCrLf & "Wilt u WIDM Exam nu herstarten?",
                    "Herstarten", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
        If result = MsgBoxResult.Yes Then
            Application.Restart()
        End If
    End Sub

    Private Sub btnLanguage_Click(sender As Object, e As EventArgs) Handles btnLanguage.Click
        Dim p As New Point(btnLanguage.Location.X, btnLanguage.Location.Y + btnLanguage.Size.Height)

        Me.ContextMenuStrip1.Show(Me, p)
    End Sub

    Private Sub rNewTheme_CheckedChanged(sender As Object, e As EventArgs) Handles rNewTheme.CheckedChanged
        If rNewTheme.Checked Then
            My.Settings.theme_old = 0
            'If startedUp = True Then
            If rUbuntuCondensed.Enabled = True Then
                rUbuntuCondensed.Checked = True
            Else
                rLucidaConsole.Checked = True
            End If
            'End If
        End If
    End Sub

    Private Sub rUS_CheckedChanged(sender As Object, e As EventArgs) Handles rUS.CheckedChanged
        If rUS.Checked Then
            My.Settings.theme_old = 2
            If startedUp = True Then
                rMicrosoftSansSerif.Checked = True
            End If
        End If
    End Sub

    Private Sub rUK_CheckedChanged(sender As Object, e As EventArgs) Handles rUK.CheckedChanged
        If rUK.Checked Then
            My.Settings.theme_old = 3
            If startedUp = True Then
                rComicSansMS.Checked = True
            End If
        End If
    End Sub

    Private Sub Button5_Click_1(sender As Object, e As EventArgs) Handles Button5.Click
        FolderBrowserDialog2.Description = getLang("FolderBrowserDialog2")
        If FolderBrowserDialog2.ShowDialog() = DialogResult.OK Then
            Try
                Dim document As XmlReader
                document = New XmlTextReader(FolderBrowserDialog2.SelectedPath & "\afl" & numAflevering.Value & ".widm")

                Dim answers() As String = {""}
                Dim execution() As String = {""}
                While (document.Read())


                    Dim type = document.NodeType


                    If (type = XmlNodeType.Element) Then
                        If (document.Name = "answers") Then
                            answers = (WebUtility.HtmlDecode(document.ReadInnerXml.ToString)).Split(vbNewLine)
                        End If
                        If (document.Name = "execution") Then
                            execution = (document.ReadInnerXml.ToString).Split(vbNewLine)
                        End If
                    End If
                End While
                For Each line As String In answers.Skip(1) '// loop thru array list.
                    Dim lineArray() As String = line.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(Replace(lineArray(0).ToString.PadLeft(3), vbLf, "")) _
                    '// add text Item.

                    Try
                        newItem.SubItems.Add(lineArray(1))
                        newItem.SubItems.Add(lineArray(2))
                        newItem.SubItems.Add(lineArray(3))
                    Catch ex As Exception

                    End Try

                    'End If
                    Me.listAntwoorden.Items.Add(newItem) '// add Item to ListView.
                Next
                For Each line2 As String In execution.Skip(1) '// loop thru array list.
                    Dim lineArray() As String = line2.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(Replace(lineArray(0).ToString.PadLeft(3), vbLf, "")) _
                    '// add text Item.

                    Try
                        newItem.SubItems.Add(lineArray(1))
                        newItem.SubItems.Add(lineArray(2))
                        newItem.SubItems.Add(lineArray(3))
                        newItem.SubItems.Add(lineArray(4))
                    Catch ex As Exception

                    End Try

                    'End If
                    Me.listviewExecutie.Items.Add(newItem) '// add Item to ListView.
                Next
                MsgBox(getLang("ImportSuccess"))
            Catch ex As Exception
                MsgBox(ex.Message, MsgBoxStyle.Exclamation)
            End Try
        End If
    End Sub

    Private Sub FolderBrowserDialog2_HelpRequest(sender As Object, e As EventArgs) _
        Handles FolderBrowserDialog2.HelpRequest
    End Sub

    Private Sub rNummers_CheckedChanged(sender As Object, e As EventArgs) Handles rNummers.CheckedChanged
        My.Settings.rNummers = rNummers.CheckState
    End Sub

    Private Sub rNostalgia_CheckedChanged_1(sender As Object, e As EventArgs) Handles rNostalgia.CheckedChanged
        If rNostalgia.Checked Then
            My.Settings.theme_old = 1
            If startedUp = True Then
                rComicSansMS.Checked = True
            End If
        End If
    End Sub

    Private Sub rBackup_CheckedChanged(sender As Object, e As EventArgs) Handles rBackup.CheckedChanged
        If rBackup.Checked Then
            My.Settings.rBackup = True
            Panel7.Enabled = True
        Else
            My.Settings.rBackup = False
            Panel7.Enabled = False
        End If
    End Sub

    Private Sub ToolStripButton8_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton8.Click
        If My.Settings.language = "en" Then
            Process.Start("http://koenvh.nl/en/contact")
        Else
            Process.Start("http://koenvh.nl/nl/contact")
        End If
    End Sub

    Private Sub rCustomFont_CheckedChanged(sender As Object, e As EventArgs) Handles rCustomFont.CheckedChanged
        My.Settings.font = 5
        If rCustomFont.Checked = True Then
            btnCustomFont.Enabled = True
            txtCustomFont.Enabled = True
        Else
            btnCustomFont.Enabled = False
            txtCustomFont.Enabled = False
        End If
    End Sub

    Private Sub btnCustomFont_Click(sender As Object, e As EventArgs) Handles btnCustomFont.Click
        Try

            If FontDialog1.ShowDialog() = DialogResult.OK Then
                My.Settings.customFont = FontDialog1.Font
                Me.txtCustomFont.Font = FontDialog1.Font
                My.Settings.Save()
            End If

        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub GroupBox8_Enter(sender As Object, e As EventArgs) Handles GroupBox8.Enter
    End Sub

    Private Sub rLucidaConsole_CheckedChanged(sender As Object, e As EventArgs) Handles rLucidaConsole.CheckedChanged
        My.Settings.font = 0
    End Sub

    Private Sub rOCRAEXT_CheckedChanged_1(sender As Object, e As EventArgs) Handles rOCRAEXT.CheckedChanged
        My.Settings.font = 1
    End Sub

    Private Sub rComicSansMS_CheckedChanged(sender As Object, e As EventArgs) Handles rComicSansMS.CheckedChanged
        My.Settings.font = 2
    End Sub

    Private Sub rMicrosoftSansSerif_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rMicrosoftSansSerif.CheckedChanged
        My.Settings.font = 3
    End Sub

    Private Sub rUbuntuCondensed_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rUbuntuCondensed.CheckedChanged
        My.Settings.font = 4
    End Sub

    Private Sub Button24_Click_1(sender As Object, e As EventArgs) Handles Button24.Click
        OpenFileDialog2.ShowDialog()
    End Sub

    Private Sub OpenFileDialog2_FileOk(sender As Object, e As CancelEventArgs) Handles OpenFileDialog2.FileOk
        txtBackground.Text = OpenFileDialog2.FileName
    End Sub

    Private Sub txtAchtergrond_MouseClick(sender As Object, e As MouseEventArgs) Handles txtBackground.MouseClick
        OpenFileDialog2.ShowDialog()
    End Sub

    Private Sub txtAchtergrond_TextChanged(sender As Object, e As EventArgs) Handles txtBackground.TextChanged
        My.Settings.background = txtBackground.Text
    End Sub

    Private Sub LinkLabel15_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel15.LinkClicked
        txtBackground.Text = ""
    End Sub

    Private Sub Button25_Click(sender As Object, e As EventArgs) Handles Button25.Click

        If ColorDialog1.ShowDialog() = DialogResult.OK Then
            pBackgroundColor.BackColor = ColorDialog1.Color
            My.Settings.backgroundColor = ColorDialog1.Color
        End If
    End Sub

    Public Sub callVirtualKeyboard()
        If Me.rVirtualKeyboard.Checked = True Then
            Try

                FrmEnterName.Panel1.Top = (FrmEnterName.Height / 4) - (FrmEnterName.Panel1.Height / 2)
                FrmEnterName.Panel2.Top = (FrmEnterName.Height / 4) - (FrmEnterName.Panel2.Height / 2)
                FrmEnterName.Panel3.Top = (FrmEnterName.Height / 4) - (FrmEnterName.Panel3.Height / 2)

                FrmStartExecutie.Panel1.Top = (FrmStartExecutie.Height / 4) - (FrmStartExecutie.Panel1.Height / 2)
                FrmStartExecutie.Panel2.Top = (FrmStartExecutie.Height / 4) - (FrmStartExecutie.Panel2.Height / 2)
                FrmStartExecutie.Panel3.Top = (FrmStartExecutie.Height / 4) - (FrmStartExecutie.Panel3.Height / 2)
                Process.Start("C:\Program Files\Common Files\Microsoft Shared\ink\TabTip.exe")
            Catch ex As Exception

            End Try

        End If
    End Sub

    Public Sub killVirtualKeyboard()
        If Me.rVirtualKeyboard.Checked = True Then
            Try
                Dim pProcess() As Process = Process.GetProcessesByName("TabTip")

                For Each p As Process In pProcess
                    p.Kill()
                Next
                FrmEnterName.Panel1.Top = (FrmEnterName.Height / 2) - (FrmEnterName.Panel1.Height / 2)
                FrmEnterName.Panel2.Top = (FrmEnterName.Height / 2) - (FrmEnterName.Panel2.Height / 2)
                FrmEnterName.Panel3.Top = (FrmEnterName.Height / 2) - (FrmEnterName.Panel3.Height / 2)

                FrmStartExecutie.Panel1.Top = (FrmStartExecutie.Height / 2) - (FrmStartExecutie.Panel1.Height / 2)
                FrmStartExecutie.Panel2.Top = (FrmStartExecutie.Height / 2) - (FrmStartExecutie.Panel2.Height / 2)
                FrmStartExecutie.Panel3.Top = (FrmStartExecutie.Height / 2) - (FrmStartExecutie.Panel3.Height / 2)
            Catch ex As Exception

            End Try
        End If
    End Sub

    Private Sub rOnscreenKeyboard_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rVirtualKeyboard.CheckedChanged
        If rVirtualKeyboard.Checked = True Then
            My.Settings.rVirtualKeyboard = True
        Else
            My.Settings.rVirtualKeyboard = False
        End If
    End Sub

    Private Sub ToolStripButton15_Click_1(sender As Object, e As EventArgs)
    End Sub

    Private Sub rNumberBeforeQuestion_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rNumberBeforeQuestion.CheckedChanged
        If rNumberBeforeQuestion.Checked Then
            My.Settings.rNumberBeforeQuestion = True
        Else
            My.Settings.rNumberBeforeQuestion = False
        End If
    End Sub


    Private Sub txtIP_LostFocus(sender As Object, e As EventArgs) Handles txtIP.LostFocus

        Dim rx As New Regex("^(?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)(?(?=\.?\d)\.)){4}$")

        If Not rx.IsMatch(txtIP.Text) Then
            MessageBox.Show("The IP address is not in proper format!")
            txtIP.SelectAll()
        End If
    End Sub

    Private Sub txtIP_TextChanged(sender As Object, e As EventArgs) Handles txtIP.TextChanged
    End Sub

    Private Sub Label49_Click(sender As Object, e As EventArgs) Handles Label49.Click
    End Sub

    Private Sub Button28_Click(sender As Object, e As EventArgs) Handles Button28.Click
        StartServer()
    End Sub

    Private Sub Button27_Click(sender As Object, e As EventArgs) Handles Button27.Click
        StopServer()
    End Sub

    Private Sub Button26_Click(sender As Object, e As EventArgs) Handles Button26.Click
        StartClient()
        SendMessage()
    End Sub

    Private Sub rRandom_CheckedChanged(sender As Object, e As EventArgs) Handles rRandom.CheckedChanged
        If rRandom.Checked Then
            My.Settings.rRandom = True
        Else
            My.Settings.rRandom = False
        End If
    End Sub

    Sub ConvertXMLtoText(loc As String, episode As String, GrafiekType As String)
        Try
            Dim execution() As String = {""}


            Dim document As XmlReader
            document = New XmlTextReader(loc)
            While (document.Read())

                Dim type = document.NodeType


                If (type = XmlNodeType.Element) Then
                    If (document.Name = "execution") Then
                        execution = (WebUtility.HtmlDecode(document.ReadInnerXml.ToString)).Split(vbNewLine)
                    End If
                End If

            End While

            document.Close()
            For Each line2 As String In execution.Skip(1) '// loop thru array list.
                Dim lineArray() As String = line2.Split("#") '// separate by "#" character.

                Console.WriteLine(lineArray(0).ToString)
                Try
                    totalRightAnswers = totalRightAnswers + lineArray(1)
                    txtTotalRightAnswers.Text = totalRightAnswers
                    totalTime = totalTime + lineArray(2)
                    txtTotalTime.Text = totalTime
                    If GrafiekType = "answersright" Then
                        Chart1.Series(Replace(lineArray(0), vbLf, "")).Points.AddXY(episode, lineArray(1))
                    ElseIf GrafiekType = "time" Then
                        Chart1.Series(Replace(lineArray(0), vbLf, "")).Points.AddXY(episode, lineArray(2))
                    End If


                    'Dim newItem As New ListViewItem
                    'newItem.SubItems.Add(episode.PadLeft(2))
                    'newItem.SubItems.Add(Replace(lineArray(0), vbLf, "").ToString)
                    'newItem.SubItems.Add(lineArray(1))
                    'listSortStatistics.Items.Add(newItem) '// add Item to ListView.
                Catch ex As Exception
                    Console.WriteLine(ex.Message)
                End Try
            Next
        Catch ex As Exception

        End Try
    End Sub

    Sub LoadChart(GrafiekType As String)
        If My.Settings.folder <> "" Then
            Chart1.Series.Clear()
            totalRightAnswers = 0
            totalTime = 0
            Dim listFoundFiles As New ListBox
            listFoundFiles.Sorted = True

            For Each item In listKandidaten.Items
                Console.WriteLine(item)
                Chart1.Series.Add(item)
                Chart1.Series(item).Name = item
                Chart1.Series(item).IsXValueIndexed = True
                Chart1.Series(item).MarkerStyle = MarkerStyle.Circle
                '  Chart1.Series(item).Sort(SortOrder.Ascending, "X")

                Chart1.Series(item.ToString).ChartType = SeriesChartType.Line
            Next
            For Each foundFile As String In My.Computer.FileSystem.GetFiles(My.Settings.folder)
                If foundFile.EndsWith(".widm") Then

                    Console.WriteLine(foundFile)

                    listFoundFiles.Items.Add(foundFile.PadLeft(My.Settings.folder.Length + 11))
                    ' ConvertXMLtoText(foundFile.PadLeft(My.Settings.folder.Length + 11), ep)
                End If
            Next
            For Each item In listFoundFiles.Items
                Dim ep As String = item
                ep = Replace(ep, My.Settings.folder & "\afl", "")
                ep = Replace(ep, ".widm", "").PadLeft(2)
                ConvertXMLtoText(item, ep, GrafiekType)
            Next
        Else
            MsgBox(getLang("Folder"), MsgBoxStyle.Exclamation)
        End If
    End Sub

    Private Sub Button30_Click(sender As Object, e As EventArgs) Handles Button30.Click

        Chart1.Titles("Title2").Text = "Antwoorden goed/Answers right"
        LoadChart("answersright")
    End Sub

    Private Sub Button31_Click_1(sender As Object, e As EventArgs) Handles Button31.Click
        Dim save As New SaveFileDialog
        save.Filter = "Portable Network Graphics (*.png)|*.png"
        save.FileName = ""
        If save.ShowDialog() = DialogResult.OK Then
            Chart1.SaveImage(save.FileName, ImageFormat.Png)
        End If
    End Sub

    Private Sub Button32_Click(sender As Object, e As EventArgs) Handles Button32.Click
        Chart1.Titles("Title2").Text = "Tijd/Time"
        LoadChart("time")
    End Sub

    Private Sub OmgekeerdToolStripMenuItem_Click(sender As Object, e As EventArgs) _
        Handles OmgekeerdToolStripMenuItem.Click
        tRightToLeft.Start()
    End Sub

    Private Sub tRightToLeft_Tick(sender As Object, e As EventArgs) Handles tRightToLeft.Tick
        Try
            For Each f As Form In My.Application.OpenForms
                f.RightToLeftLayout = True
                f.RightToLeft = RightToLeft.Yes
                For Each c As Label In f.Controls
                    c.Text = "Trolololo"
                Next
            Next
        Catch ex As Exception

        End Try
    End Sub

    Private Sub Button33_Click(sender As Object, e As EventArgs) Handles Button33.Click
        If My.Settings.language = "en" Then
            Process.Start("https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=K6WY5VNJUXKDQ")
        Else
            Process.Start("http://koenvh.nl/nl/donate")
        End If
    End Sub

    Private Sub rGroep_CheckedChanged(sender As Object, e As EventArgs) Handles rGroep.CheckedChanged
    End Sub

    Private Sub ToolStripComboBox1_Click(sender As Object, e As EventArgs) Handles ToolStripComboBox1.Click
    End Sub

    Private Sub txtListViewJokers_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles txtListViewJokers.SelectedIndexChanged
    End Sub

    Private Sub rFrankrijk_CheckedChanged(sender As Object, e As EventArgs) Handles rFrankrijk.CheckedChanged
        If rFrankrijk.Checked Then
            My.Settings.theme_old = 4
            If startedUp = True Then
                rMicroFLF.Checked = True
            End If
        End If
    End Sub

    Private Sub rMicroFLF_CheckedChanged(sender As Object, e As EventArgs) Handles rMicroFLF.CheckedChanged
        My.Settings.font = 6
    End Sub

    Private Sub RadioButton1_CheckedChanged(sender As Object, e As EventArgs) Handles rFrankrijkSchermen.CheckedChanged
        If rFrankrijkSchermen.Checked Then
            My.Settings.schermstyle = 7
        End If
    End Sub

    Private Sub listviewExecutie_ColumnClick(sender As Object, e As ColumnClickEventArgs) _
        Handles listviewExecutie.ColumnClick
        ' Determine whether the column is the same as the last column clicked.
        If e.Column <> sortColumn Then
            ' Set the sort column to the new column.
            sortColumn = e.Column
            ' Set the sort order to ascending by default.
            listviewExecutie.Sorting = SortOrder.Ascending
        Else
            ' Determine what the last sort order was and change it.
            If listviewExecutie.Sorting = SortOrder.Ascending Then
                listviewExecutie.Sorting = SortOrder.Descending
            Else
                listviewExecutie.Sorting = SortOrder.Ascending
            End If
        End If
        ' Call the sort method to manually sort.
        listviewExecutie.Sort()
        ' Set the ListViewItemSorter property to a new ListViewItemComparer
        ' object.
        listviewExecutie.ListViewItemSorter = New ListViewItemComparer(e.Column,
                                                                       listviewExecutie.Sorting)
    End Sub

    Private Sub listAntwoorden_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles listAntwoorden.SelectedIndexChanged
    End Sub

    Private Sub listAntwoorden_ColumnClick(sender As Object, e As ColumnClickEventArgs) _
        Handles listAntwoorden.ColumnClick
        ' Determine whether the column is the same as the last column clicked.
        If e.Column <> sortColumn Then
            ' Set the sort column to the new column.
            sortColumn = e.Column
            ' Set the sort order to ascending by default.
            listAntwoorden.Sorting = SortOrder.Ascending
        Else
            ' Determine what the last sort order was and change it.
            If listAntwoorden.Sorting = SortOrder.Ascending Then
                listAntwoorden.Sorting = SortOrder.Descending
            Else
                listAntwoorden.Sorting = SortOrder.Ascending
            End If
        End If
        ' Call the sort method to manually sort.
        listAntwoorden.Sort()
        ' Set the ListViewItemSorter property to a new ListViewItemComparer
        ' object.
        listAntwoorden.ListViewItemSorter = New ListViewItemComparer(e.Column,
                                                                     listAntwoorden.Sorting)
    End Sub

    Private Sub rMonitor_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rMonitor.SelectedIndexChanged
        If startedUp = True Then
            My.Settings.rMonitor = rMonitor.SelectedIndex
        End If
    End Sub

    Private Sub LinkLabel20_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel20.LinkClicked
        FrmIdentify.Show()
    End Sub

    Private Sub LinkLabel21_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs)
    End Sub

    Private Sub Button34_Click(sender As Object, e As EventArgs)
    End Sub

    Private Sub Button35_Click(sender As Object, e As EventArgs) Handles Button35.Click
        'Convert Vrijstellingen to a large number for comparing purposes. The comparer does not like comparing integers that aren't integers :)
        For Each item As ListViewItem In listviewExecutie.Items
            If item.SubItems(4).Text = "Vrijstelling" Then
                item.SubItems(4).Text = "214748364" '32-bit INT limit - 1
            End If
        Next

        ' Determine whether the column is the same as the last column clicked.

        ' Set the sort column to the new column.
        sortColumn = listviewExecutie.Columns(1).Index

        ' Set the sort order to ascending by default.
        listviewExecutie.Sorting = SortOrder.Descending

        ' Call the sort method to manually sort.
        listviewExecutie.Sort()
        ' Set the ListViewItemSorter property to a new ListViewItemComparer
        ' object.
        listviewExecutie.ListViewItemSorter = New ListViewItemComparerInteger(listviewExecutie.Columns(1).Index,
                                                                              listviewExecutie.Columns(4).Index,
                                                                              listviewExecutie.Sorting)


        'Okay, now let's find the ones with the same score
        'At the moment, Jokers and Vrijstellingen (exemptions) are not supported, as the sorting mechanism does not count those up :)
        For i = 0 To listviewExecutie.Items.Count - 2
            'If IsNumeric(listviewExecutie.Items(i).SubItems(4).Text) Then
            'Try
            If _
                CInt(listviewExecutie.Items(i).SubItems(1).Text) + CInt(listviewExecutie.Items(i).SubItems(4).Text) =
                CInt(listviewExecutie.Items(i + 1).SubItems(1).Text) +
                CInt(listviewExecutie.Items(i + 1).SubItems(4).Text) Then
                If _
                    CInt(listviewExecutie.Items(i).SubItems(2).Text) >
                    CInt(listviewExecutie.Items(i + 1).SubItems(2).Text) Then
                    Dim tItem As ListViewItem
                    tItem = Me.listviewExecutie.Items(i + 1)
                    Me.listviewExecutie.Items(i + 1) = Me.listviewExecutie.Items(i).Clone
                    Me.listviewExecutie.Items(i) = tItem.Clone
                    'MsgBox("Moved!")

                    i -= 2
                    If i < 0 Then
                        i = 0
                    End If
                Else
                    'MsgBox(listviewExecutie.Items(i).SubItems(2).Text & "<=" & listviewExecutie.Items(i).SubItems(2).Text > listviewExecutie.Items(i + 1).Text)
                End If
            Else

            End If
            'Catch ex As Exception

            'End Try

            'End If
        Next

        'Convert them back to Vrijstellingen
        For Each item As ListViewItem In listviewExecutie.Items
            If item.SubItems(4).Text = "214748364" Then
                item.SubItems(4).Text = "Vrijstelling" '32-bit INT limit - 1
            End If
        Next
    End Sub

    Private Sub Button36_Click(sender As Object, e As EventArgs) Handles Button36.Click
        If SaveFileDialog6.ShowDialog() = DialogResult.OK Then
            Dim Write As New StreamWriter(SaveFileDialog6.FileName)
            Write.Write(My.Resources.htmlExport01)
            If My.Settings.language = "en" Then
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>Candidate</th>" & vbCrLf & "<th>Answers right</th>" & vbCrLf &
                    "<th>Time</th>" & vbCrLf & "<th>Screen</th>" & vbCrLf & vbCrLf & "<th>Jokers/Exemptions</th>" &
                    "</tr>")
            Else
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>Kandidaat</th>" & vbCrLf & "<th>Antwoorden goed</th>" & vbCrLf &
                    "<th>Tijd</th>" & vbCrLf & "<th>Scherm</th>" & vbCrLf & vbCrLf & "<th>Jokers/Vrijstellingen</th>" &
                    "</tr>")
            End If

            For Each item As ListViewItem In listviewExecutie.Items
                Write.WriteLine("<tr>")
                Write.WriteLine("<td>" & item.SubItems(0).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(1).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(2).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(3).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(4).Text & "</td>")
                Write.WriteLine("</tr>")

            Next
            Write.WriteLine("</table>")
            If My.Settings.language = "en" Then
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print this page</a></p>")
            Else
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print deze pagina</a></p>")
            End If
            Write.WriteLine("</body>")
            Write.WriteLine("</html>")
            Write.Close()

            'rSorting.Checked = sortCheckState
            Try
                Process.Start(SaveFileDialog6.FileName)
            Catch ex As Exception

            End Try

        End If
    End Sub

    Private Sub ToolStripButtonTheme_Click(sender As Object, e As EventArgs) Handles ToolStripButtonTheme.Click
        Dim form As New FrmTheme
        form.Show()
    End Sub
    Sub ReloadThemes()
        Try
            For Each foundFile As String In My.Computer.FileSystem.GetFiles(CurDir() & "\Thema's\")
                If foundFile.EndsWith(".widmthema") Then
                    comboThemes.Items.Add(foundFile.Replace(CurDir() & "\Thema's\", ""))
                End If
            Next
        Catch ex As Exception

        End Try

    End Sub

    Private Sub btnReloadThemes_Click(sender As Object, e As EventArgs) Handles btnReloadThemes.Click
        ReloadThemes()
    End Sub

    Private Sub comboThemes_SelectedValueChanged(sender As Object, e As EventArgs) Handles comboThemes.SelectedValueChanged

    End Sub

    Private Sub comboThemes_SelectedIndexChanged(sender As Object, e As EventArgs) Handles comboThemes.SelectedIndexChanged
        My.Settings.theme = comboThemes.Text
        My.Settings.Save()
    End Sub

    Private Sub btnSaveTheme_Click(sender As Object, e As EventArgs) Handles btnEditTheme.Click
        Dim form As New FrmTheme(comboThemes.Text)
        form.Show()
    End Sub
End Class