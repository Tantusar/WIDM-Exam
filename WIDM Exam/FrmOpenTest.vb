Imports System.ComponentModel
Imports System.Drawing.Imaging
Imports System.Globalization
Imports System.IO
Imports System.Net
Imports System.Security.Cryptography
Imports System.Text
Imports System.Text.RegularExpressions
Imports System.Threading
Imports System.Windows.Forms.DataVisualization.Charting
Imports System.Xml
Imports AutoUpdaterDotNET
Imports ComponentOwl.BetterListView
Imports Microsoft.VisualBasic.FileIO
Imports Newtonsoft.Json
Imports WMPLib

Public Class FrmOpenTest
    Public Const Rood = "Rood"
    Public Const Groen = "Groen"
    Public Const Vrijstelling = "Vrijstelling"

    Declare Function AddFontResource Lib "gdi32" Alias "AddFontResourceA" (lpFileName As String) As Long
    Public SKandidaten As String = ""
    Public PercentageCache As Integer = 0
    Public Percentage As Integer = 0
    Public File As String
    Public StartedUp As Boolean = False
    Public TotalRightAnswers As Integer = 0
    Public TotalTime As Integer = 0
    Public DpiPercent As New TextBox

    Public Sub LoadTheme()
        Try
            'Dim fs As New FileStream(CurDir() & "\Thema's\" & My.Settings.CurrentTheme, FileMode.Open)

            'Dim formatter As New BinaryFormatter

            '' Deserialize the hashtable from the file and 
            '' assign the reference to the local variable.
            'CurrentTheme = DirectCast(formatter.Deserialize(fs), Theme)

            'fs.Close()

            Dim objStreamReader As New IO.StreamReader(CurDir() & "\Thema's\" & My.Settings.CurrentTheme)
            CurrentTheme = JsonConvert.DeserializeObject(Of Theme)(objStreamReader.ReadToEnd())
            objStreamReader.Close()
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Critical)
        End Try

    End Sub


    Public Sub GroepsmodusUpdate()
        If StartedUp = True Then
            If rGroep.Checked Then
                txtWieisdemol.Items.Clear()
                txtWieisdemol.SelectedItem = ""
                txtWieisdemol.Text = ""
                'Dim li As ListViewItem
                'For Each li In listviewExecutie.Items
                '    listviewExecutie.Items.Remove(li)
                'Next
                'Dim li2 As ListViewItem
                'For Each li2 In listAntwoorden.Items
                '    listAntwoorden.Items.Remove(li2)
                'Next
                'For Each li3 As ListViewItem In listviewScherm.Items
                '    listviewScherm.Items.Remove(li3)
                'Next
                '        'If startedUp = True Then
                '        '    laatsteVraagInladen()
                '        '    Inladen()
                '        'End If

                ' txtKandidaten.Text = txtFolder.Text & "\afl" & numAflevering.Value & ".widmk"
                'File = txtFolder.Text & "\afl" & numAflevering.Value & ".widm3"
                'listKandidaten.Items.Clear()
                '        loadKandidaten()
                'LoadXml()
                'CalculateCandidates()
                'CalculateSchermen()
            End If
        End If
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        OpenFileTest.ShowDialog()
    End Sub

    Private Sub OpenFileDialog1_FileOk(sender As Object, e As CancelEventArgs) Handles OpenFileTest.FileOk
        txtTest.Text = OpenFileTest.FileName
    End Sub

    'Public Sub CalculateCandidates()
    '    numKandidaten.Value = listKandidaten.Items.Count
    '    txtAantalKandidaten.Text = listKandidaten.Items.Count.ToString
    '    listKandidaten.Sorted = True

    '    txtWieisdemol.Items.Clear()
    '    For Each item In listKandidaten.Items
    '        txtWieisdemol.Items.Add(item)
    '    Next

    '    txtWieisdemol.Items.Add(GetLang("geen"))
    'End Sub

    Private Sub FrmOpenTest_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing

        If rSaveAtClose.Checked Then
            'Dim result = MessageBox.Show("Wilt u de wijzigingen opslaan?", "Opslaan?", MessageBoxButtons.YesNo)
            'If result = Windows.Forms.DialogResult.Yes Then
            SaveGroupmode()
            StartedUp = False
            Try
                'SaveXml()
                'CalculateCandidates()
            Catch ex As Exception
                Log(ex.ToString())
                MsgBox(ex.Message, MsgBoxStyle.Exclamation)

            End Try
        End If
        Try
            If (rBackup.Checked = True) And (rGroep.Checked = True) And (My.Settings.folder <> "") Then

                Dim list As New ListBox
                For Each folder In Directory.GetDirectories(My.Settings.folder)
                    If InStr(1, folder, "Back-up") Then
                        list.Items.Add(folder)
                    End If

                Next
                If list.Items.Count > numBackups.Value Then
                    For i = 0 To list.Items.Count - numBackups.Value
                        Dim temp As String = list.Items(i).ToString()
                        My.Computer.FileSystem.DeleteDirectory(temp, DeleteDirectoryOption.DeleteAllContents)
                    Next

                End If

                BackupXml()
            End If
        Catch ex As Exception
            Log(ex.ToString())
        End Try
        My.Settings.Save()
    End Sub

    Private Sub FrmOpenTest_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        contextLanguages.Items(0).Image = My.Resources.gb
        contextLanguages.Items(1).Image = My.Resources.nl

        Me.TabControl1.TabPages.Remove(TabPage7)
        CheckForIllegalCrossThreadCalls = False

        CurrentGroup = New Groupmode()
        CurrentTheme = New Theme()

        'Loading settings
        LoadSettings()

        ReloadThemes()
        comboThemes.Text = My.Settings.CurrentTheme
        LoadTheme()

        'Monitor detection
        Dim monitorIndex = 0
        For Each item In Screen.AllScreens
            If item.Primary Then
                rMonitor.Items.Add(
                    Replace((item.DeviceName), "\\.\DISPLAY", "Monitor ") & " (" & GetLang("Primair") & ")")
                rMonitor.SelectedIndex = monitorIndex
            Else
                rMonitor.Items.Add(Replace((item.DeviceName), "\\.\DISPLAY", "Monitor "))
            End If
            monitorIndex += 1
        Next

        If My.Settings.rMonitor <> -1 Then
            Try
                rMonitor.SelectedIndex = My.Settings.rMonitor
            Catch ex As Exception
                Log(ex.ToString())
            End Try

        End If


        'Password check
        If My.Settings.password = "" Then
            Show()
        Else
            Hide()
            FrmPassword.ShowDialog()
            If FrmPassword.Cancel = True Then
                Application.Exit()
            ElseIf FrmPassword.TextBox1.Text = My.Settings.password Then
                Show()
                txtPassword.Text = My.Settings.password

            Else

                MsgBox(GetLang("WrongPass"), MsgBoxStyle.Exclamation)

                Application.Exit()
            End If
        End If

        'Windows Media Player check
        If _
            My.Computer.FileSystem.FileExists(CurDir() & "\Interop.WMPLib.dll") And
            My.Computer.FileSystem.FileExists(CurDir() & "\AxInterop.WMPLib.dll") Then

        Else
            MsgBox(
                "Het lijkt erop dat Interop.WMPLib.dll en AxInterop.WMPLib.dll niet in de map WIDM Exam staan. Hierdoor kan het programma mogelijk niet werken. Gelieve WIDM Exam opnieuw te downloaden.",
                MsgBoxStyle.Critical)
        End If
        Try
            Dim test As New WindowsMediaPlayer

        Catch ex As Exception
            MsgBox(
                "Het lijkt erop dat Windows Media Player niet geïnstalleerd is of dat er een ander probleem mee is. Zonder Windows Media Player kan WIDM Exam niet werken. Installeer Windows Media Player om WIDM Exam te gebruiken." &
                vbCrLf & vbCrLf & ex.Message, MsgBoxStyle.Critical)
            Log(ex.ToString())
        End Try

        Label34.Text = GetLang("Aflevering")

        AutoUpdater.Start("http://widmexam.koenvh.nl/update.xml")

        ReloadDataviews()

        StartedUp = True
    End Sub

    Private Sub txtTest_TextChanged(sender As Object, e As EventArgs) Handles txtTest.TextChanged
        If rAlleen.Checked Then
            My.Settings.file = txtTest.Text
        End If

        File = txtTest.Text
    End Sub

    Private Sub ToolStripLabel1_Click(sender As Object, e As EventArgs) Handles ToolStripLabel1.Click
        Process.Start("http://koenvh.nl")
    End Sub

    Private Sub ToolStripButton3_Click(sender As Object, e As EventArgs)
        StartExecutie()
    End Sub

    Private Sub ToolStripButton4_Click(sender As Object, e As EventArgs) Handles ToolStripButton4.Click
        FrmTestMaken.Show()
    End Sub

    Private Shared Sub SortIntegerListBox(listBox As ListBox)
        Dim tempList As New List(Of Integer)
        For Each LI In listBox.Items
            tempList.Add(Integer.Parse(LI.ToString()))
        Next
        tempList.Sort()
        listBox.DataSource = tempList
    End Sub

    Private Sub TextBox1_TextChanged_2(sender As Object, e As EventArgs) Handles txtPassword.TextChanged
        My.Settings.password = txtPassword.Text
    End Sub

    Private Sub ToolStripButton6_Click(sender As Object, e As EventArgs) Handles ToolStripButton6.Click
        If MsgBox(GetLang("ClearListWarning"), MsgBoxStyle.YesNo Or MsgBoxStyle.Question) = MsgBoxResult.Yes Then
            CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).ExecutionResults.Clear()
            ReloadExecution()
        End If
    End Sub

    Private Sub StartTest()

        If Not txtTest.Text = "" Then
            If rGroep.Checked = True And CurrentGroup.Candidates Is Nothing Then
                If My.Settings.language = "en" Then
                    MsgBox(
                        "It's just an idea, but it might be useful to add a few candidates to ""Group mode"". And while you're on it, save them as well.",
                        MsgBoxStyle.Exclamation)
                Else
                    MsgBox(
                        "Het is enkel een idee, maar misschien is het handig om een aantal kandidaten toe te voegen of in te laden onder ""Groepsmodus"" en deze op te slaan.",
                        MsgBoxStyle.Exclamation)
                End If
            Else
                'Console.WriteLine(listKandidaten.Items.Count)
                If rAlleen.Checked Then
                    File = txtTest.Text
                Else
                    File = txtFolder.Text & "\afl" & CurrentGroup.CurrentEpisode & ".widm3"
                End If
                If My.Computer.FileSystem.FileExists(File) Then
                    'Encrypted = False
                    If rGroep.Checked Then
                        Dim result
                        If My.Settings.language = "en" Then
                            result = MessageBox.Show("Are you sure you want to start the quiz", "Start?",
                                                     MessageBoxButtons.YesNo)
                        Else
                            result = MessageBox.Show("Weet u zeker dat u de test wilt starten?", "Starten?",
                                                     MessageBoxButtons.YesNo)
                        End If


                        If result = DialogResult.Yes Then
                            FrmEnterName.Show()
                        End If
                    Else
                        'Encrypted = False
                        FrmEnterName.Show()
                    End If
                Else
                    If My.Settings.language = "en" Then
                        MsgBox("File not found!", MsgBoxStyle.Exclamation)
                    Else
                        MsgBox("Bestand niet gevonden!", MsgBoxStyle.Exclamation)
                    End If

                End If
            End If
        Else
            If My.Settings.language = "en" Then
                MsgBox("Choose a quiz first!", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Kies eerst een test!", MsgBoxStyle.Exclamation)
            End If

        End If
        'If file = "" Then
        '    MsgBox("Het lijkt erop dat er geen test is ingeladen!", MsgBoxStyle.Exclamation)
        'End If
    End Sub

    Private Sub CalculatePercentage()
        If rPercentageHandmatig.Checked Then
            Percentage = numPercentage.Value
        Else
            Dim cache2 As Double
            Dim cache1 As Double

            PercentageCache = 0
            cache1 = 0
            cache2 = 0

            Dim i = 0
            For Each li In CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).ExecutionResults.Values
                If li.Candidate = CurrentGroup.Mole.Name And rFilterMol.Checked Then
                Else
                    PercentageCache = PercentageCache + li.AnswersRight
                End If
                'ListView1.Items.Remove(li)
                ' If you only want to remove one item with that Text
                ' you can put an Exit For right here
                i = i + 1
            Next
            i = 0
            'MsgBox(i)
            'MsgBox(percentageCache)

            Try

                If rFilterMol.Checked Then
                    cache2 = numVragen.Value * (numKandidaten.Value - 1)
                Else
                    cache2 = numVragen.Value * numKandidaten.Value
                End If

                cache1 = PercentageCache / cache2
                'MsgBox(cache1)
                Percentage = cache1 * 100
                If Percentage > 100 Then
                    If My.Settings.language = "en" Then
                        MsgBox(
                            "The percentage is: " & Percentage & "%" & vbCrLf &
                            "This is more than a 100%, are you sure this is right?", MsgBoxStyle.Exclamation)
                    Else
                        MsgBox(
                            "Het percentage is: " & Percentage & "%" & vbCrLf &
                            "Dit is meer dan 100%, weet u zeker dat dit klopt?", MsgBoxStyle.Exclamation)
                    End If

                End If
            Catch ex As Exception
                If My.Settings.language = "en" Then
                    MsgBox(ex.Message & vbCrLf & "Are you sure the entered data is correct?", MsgBoxStyle.Exclamation)
                Else
                    MsgBox(ex.Message & vbCrLf & "Weet u zeker dat de ingevoerde gegevens kloppen?",
                           MsgBoxStyle.Exclamation)
                End If
                Log(ex.ToString())
            End Try

        End If
    End Sub

    Private Sub StartExecutie()
        If rGroep.Checked Then
            If listExecution.Items.Count <> 0 Then
                Dim result
                If My.Settings.language = "en" Then
                    result = MessageBox.Show("Are you sure you want to start the elimination?", "Start?",
                                             MessageBoxButtons.YesNo)
                Else
                    result = MessageBox.Show("Weet u zeker dat u de executie wilt starten?", "Starten?",
                                             MessageBoxButtons.YesNo)
                End If
                If result = DialogResult.Yes Then
                    FrmStartExecutie.Show()
                End If
            Else
                If My.Settings.language = "en" Then
                    MsgBox("It looks like there aren't any results under ""Elimination""", MsgBoxStyle.Exclamation)
                Else
                    MsgBox("Het lijkt erop dat er nog geen uitslagen zijn onder ""Executie""!", MsgBoxStyle.Exclamation)
                End If

            End If

        Else
            If My.Settings.language = "en" Then
                MsgBox("Group mode needs to be on before the elimination can start", MsgBoxStyle.Exclamation)
            Else
                MsgBox("Groepsmodus moet aanstaan voordat de executie kan starten!", MsgBoxStyle.Exclamation)
            End If

        End If
    End Sub

    Private Sub LinkLabel2_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel2.LinkClicked
        CalculatePercentage()
        If My.Settings.language = "en" Then
            MsgBox("The percentage is: " & Percentage & "%", MsgBoxStyle.Information)
        Else
            MsgBox("Het percentage is: " & Percentage & "%", MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub NumericUpDown1_ValueChanged(sender As Object, e As EventArgs) Handles numInterval.ValueChanged
        FrmPercentage.tmExecutie.Interval = numInterval.Value
    End Sub

    Private Sub CheckBox1_CheckedChanged_1(sender As Object, e As EventArgs) Handles rExecutie.CheckedChanged
        If rExecutie.Checked Then
            numInterval.Enabled = True
        Else
            numInterval.Enabled = False
        End If
    End Sub

    Private Sub Button3_Click_1(sender As Object, e As EventArgs) Handles Button3.Click
        CalculatePercentage()

        FrmPercentage.Show()
    End Sub

    Private Sub ToolStripButton10_Click(sender As Object, e As EventArgs)
        CalculatePercentage()

        FrmPercentage.Show()
    End Sub

    'Function saveExecutie()
    '    If txtFolder.Text <> "" Then
    '        Dim myWriter As New IO.StreamWriter(txtKandidaten.Text & "r")
    '        For Each myItem As ListViewItem In listviewExecutie.Items
    '            myWriter.WriteLine(myItem.Text & "#" & myItem.SubItems(1).Text & "#" & myItem.SubItems(2).Text & "#" & myItem.SubItems(3).Text) '// write Item and SubItem.
    '        Next
    '        myWriter.Close()
    '        Return True
    '    Else
    '        Return False
    '    End If

    'End Function

    Private Sub LinkLabel5_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel5.LinkClicked
        If My.Settings.language = "en" Then
            If _
                MsgBox("Are you sure you want to reset the settings?", MsgBoxStyle.Exclamation Or MsgBoxStyle.YesNo) =
                DialogResult.Yes Then
                My.Settings.Reset()
                MsgBox("Settings set to default." & vbCrLf & "Restart WIDM Exam for the changes to take effect.",
                       MsgBoxStyle.Information)
            End If
        Else
            If _
                MsgBox("Weet je zeker dat je je instellingen terug naar standaard wilt zetten?",
                       MsgBoxStyle.Exclamation Or MsgBoxStyle.YesNo) = DialogResult.Yes Then
                My.Settings.Reset()
                MsgBox(
                    "Instellingen terug naar standaard gezet." & vbCrLf &
                    "Herstart WIDM Exam om de wijzigingen te zien.", MsgBoxStyle.Information)
            End If
        End If
    End Sub

    Private Sub Button9_Click(sender As Object, e As EventArgs) Handles Button9.Click
        StartTest()
    End Sub

    Private Sub Button10_Click(sender As Object, e As EventArgs) Handles Button10.Click
        StartExecutie()
    End Sub

    Private Sub ToolStripButton10_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton10.Click
        StartTest()
    End Sub

    Private Sub ToolStripButton3_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton3.Click
        StartExecutie()
    End Sub

    Private Sub ToolStripButton1_Click_2(sender As Object, e As EventArgs)
        CalculatePercentage()
        Dim result
        If My.Settings.language = "en" Then
            result = MessageBox.Show("Are you sure that you want to start the percentage?", "Start?",
                                     MessageBoxButtons.YesNo)
        Else
            result = MessageBox.Show("Weet u zeker dat u het percentage wilt starten?", "Starten?",
                                     MessageBoxButtons.YesNo)
        End If
        If result = DialogResult.Yes Then
            FrmPercentage.Show()
        End If
    End Sub

    Private Sub rCombobox_CheckedChanged(sender As Object, e As EventArgs) Handles rCombobox.CheckedChanged
        If rCombobox.Checked Then
            My.Settings.rComboBox = True
        Else
            My.Settings.rComboBox = False
        End If
    End Sub

    Private Sub FrmOpenTest_ResizeEnd(sender As Object, e As EventArgs) Handles Me.ResizeEnd
        If Me.Width < 800 Then
            Me.Width = 800
        End If
        If Me.Height < 576 Then
            Me.Height = 576
        End If
    End Sub

    Private Sub txtKandidatenAdd_KeyDown(sender As Object, e As KeyEventArgs)
    End Sub

    Private Sub txtKandidatenAdd_TextChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub CheckBox1_CheckedChanged_2(sender As Object, e As EventArgs)
    End Sub

    Private Sub rAlleen_CheckedChanged(sender As Object, e As EventArgs) Handles rAlleen.CheckedChanged
        If rAlleen.Checked Then
            My.Settings.groepsmodus = False

            txtTest.Enabled = True
            Button1.Enabled = True
            txtTest.Text = My.Settings.file
            Panel3.Enabled = False

        Else
            My.Settings.groepsmodus = True
            If My.Settings.language = "en" Then
                txtTest.Text = "Group mode is on!"
            Else
                txtTest.Text = "Groepsmodus staat aan!"
            End If
            txtTest.Enabled = False
            Button1.Enabled = False
            Panel3.Enabled = True
            'allesinladen()
        End If
    End Sub

    Private Sub LinkLabel10_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs)


        MsgBox(GetLang("fontMessage"), MsgBoxStyle.Information)
    End Sub

    Private Sub LaatsteVraagInladen()
        Try
            If IO.File.Exists(txtFolder.Text & "\afl" & CurrentGroup.CurrentEpisode & ".widm3l") Then '// check if file exists.
                Dim myCoolFileLines() As String =
                        IO.File.ReadAllLines(txtFolder.Text & "\afl" & CurrentGroup.CurrentEpisode & ".widm3l") _
                '// load your file as a string array.
                For Each line As String In myCoolFileLines '// loop thru array list.
                    Dim lineArray() As String = line.Split("#") '// separate by "#" character.
                    Dim newItem As New ListViewItem(lineArray(0).ToString.PadLeft(3)) '// add text Item.
                    'newItem.SubItems.Add(lineArray(0))
                    'Dim intdots As Integer = 0
                    'For i = 1 To line.Length
                    '    Dim inta As Integer = 0 + 1
                    '    Dim stra As String = line.Substring(inta)
                    '    If stra = "." Then
                    '        intdots = intdots + 1
                    '    End If
                    'Next
                    'If line.Replace("#", "").Count = 3 Then
                    '    MsgBox("")
                    '    newItem.SubItems.Add("Onbekend")
                    '    newItem.SubItems.Add(lineArray(1))
                    '    newItem.SubItems.Add(lineArray(2))
                    'Else

                    Try
                        newItem.SubItems.Add(lineArray(1))
                        newItem.SubItems.Add(lineArray(2))
                        newItem.SubItems.Add(lineArray(3))
                    Catch ex As Exception
                        Log(ex.ToString())
                    End Try

                    'End If
                    'listAntwoorden.Items.Add(newItem) '// add Item to ListView.
                Next
            Else
                If StartedUp = True Then
                    If My.Settings.language = "en" Then
                        MsgBox("Can't find the given answers for episode " & CurrentGroup.CurrentEpisode & "!",
                               MsgBoxStyle.Exclamation)
                    Else
                        MsgBox("Kan de antwoorden voor aflevering " & CurrentGroup.CurrentEpisode & " niet vinden!",
                               MsgBoxStyle.Exclamation)
                    End If
                End If
            End If
        Catch ex As Exception
            Log(ex.ToString())
            ' MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub txtKandidatenAdd_KeyDown1(sender As Object, e As KeyEventArgs) Handles txtCandidateName.KeyDown
        If e.KeyCode = Keys.Enter Then
            e.SuppressKeyPress = True
            btnCandidateAdd_Click(sender, e)
        End If
    End Sub

    Private Sub CheckBox1_CheckedChanged_4(sender As Object, e As EventArgs) Handles CheckBox1.CheckedChanged
        If CheckBox1.Checked Then
            txtPassword.PasswordChar = ""
        Else
            txtPassword.PasswordChar = "*"
        End If
    End Sub

    Private Sub Button14_Click(sender As Object, e As EventArgs) Handles btnFolder.Click
        'FolderBrowserDialog1.RootFolder = Environment.SpecialFolder.MyDocuments
        'FolderBrowserDialog1.ShowDialog()
        If FolderBrowserGroup.ShowDialog = DialogResult.OK Then
            txtFolder.Text = FolderBrowserGroup.SelectedPath
        End If
    End Sub

    Private Sub txtFolder_TextChanged(sender As Object, e As EventArgs) Handles txtFolder.TextChanged
        My.Settings.folder = txtFolder.Text
        LoadGroupmode()
        ReloadDataviews()
        'If txtFolder.Text = "" Then
        '    LinkLabel11.Enabled = False
        '    LinkLabel7.Enabled = False
        '    LinkLabel1.Enabled = False
        'Else
        '    LinkLabel11.Enabled = True
        '    LinkLabel7.Enabled = True
        '    LinkLabel1.Enabled = True
        'End If
    End Sub

    Private Sub Button15_Click(sender As Object, e As EventArgs) Handles btnStartTest.Click

        StartTest()
    End Sub

    Private Sub HulpNodigToolStripMenuItem_Click(sender As Object, e As EventArgs)
        Try
            Process.Start(CurDir() & "\Documentatie\Test maken.pdf")
        Catch ex As Exception
            If My.Settings.language = "en" Then
                MsgBox(
                    ex.Message & vbCrLf & vbCrLf &
                    "The file couldn't be opened, try to open it manually under Documentatie > Manual.pdf",
                    MsgBoxStyle.Exclamation)
            Else
                MsgBox(
                    ex.Message & vbCrLf & vbCrLf &
                    "Het bestand kon niet worden geopend, probeer het bestand 'Documentatie > Test maken.pdf' handmatig te openen.",
                    MsgBoxStyle.Exclamation)
            End If

        End Try
    End Sub

    Private Sub LinkLabel12_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _

        'FrmStartExecutie.SchermstyleGroen()
        FrmExecutie.ShowDialog()

        'FrmStartExecutie.SchermstyleRood()
        FrmExecutie.ShowDialog()
    End Sub

    Private Sub ToolStripButton16_Click(sender As Object, e As EventArgs) Handles ToolStripButton16.Click
        FrmOver.Show()
    End Sub

    Private Sub rPercentageAutomatisch_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rPercentageAutomatisch.CheckedChanged
        If rPercentageAutomatisch.Checked Then
            groupPercentageAutomatisch.Enabled = True
            groupPercentageHandmatig.Enabled = False
        Else
            groupPercentageAutomatisch.Enabled = False
            groupPercentageHandmatig.Enabled = True
        End If
    End Sub

    Private Sub ListExecutieAdd()
        'If Me.listKandidaten.Items.Contains(txtExecutieAdd.Text) = False Then
        '    MsgBox("Naam komt niet voor in de kandidatenlijst onder groepsmodus!", MsgBoxStyle.Exclamation)
        'Else
        '    listExecutie.Items.Add(txtExecutieAdd.Text)
        '    txtExecutieAdd.Text = ""
        'End If
    End Sub

    Private Sub Button19_Click(sender As Object, e As EventArgs)
        ListExecutieAdd()
    End Sub

    Private Sub rExecutieAutomatisch_CheckedChanged(sender As Object, e As EventArgs) _

        'listExecutie.Items.Clear()
        'If rExecutieAutomatisch.Checked Then
        '    Panel1.Enabled = True
        '    Panel4.Enabled = False
        '    listExecutieUpdate()
        '    ' listExecutieUpdate()
        'Else
        '    Panel1.Enabled = False
        '    Panel4.Enabled = True
        '    listExecutieUpdate()
        'End If
    End Sub

    Private Sub ListExecutieRemove()
        'listExecutie.Items.Remove(listExecutie.SelectedItem)
    End Sub

    Private Sub Button20_Click(sender As Object, e As EventArgs)
        ListExecutieRemove()
    End Sub

    Private Sub txtExecutieAdd_KeyDown(sender As Object, e As KeyEventArgs)
        If e.KeyCode = Keys.Enter Then
            ListExecutieAdd()
        End If
    End Sub

    Private Sub ToolStripButton18_Click(sender As Object, e As EventArgs) Handles ToolStripScreensRemove.Click
        Try
            CurrentGroup.Screens.Remove(listScreens.SelectedItems(0).Text)
        Catch ex As Exception
            Log(ex.ToString())
        End Try
        ReloadScreens()
    End Sub

    Private Sub Button19_Click_1(sender As Object, e As EventArgs) Handles Button2.Click
        CurrentGroup.ScreenAdd(txtSchermNaam.Text, txtSchermLocatie.Text)
        txtSchermNaam.Clear()
        txtSchermLocatie.Clear()
        ReloadScreens()
    End Sub

    Private Sub txtSchermLocatie_MouseClick1(sender As Object, e As MouseEventArgs) Handles txtSchermLocatie.MouseClick
        If OpenFileScreen.ShowDialog() = DialogResult.OK Then
            txtSchermLocatie.Text = OpenFileScreen.FileName
        End If
    End Sub

    Private Sub txtSchermLocatie_TextChanged(sender As Object, e As EventArgs) Handles txtSchermLocatie.TextChanged
    End Sub

    Private Sub Button20_Click_1(sender As Object, e As EventArgs) Handles Button4.Click
        If OpenFileScreen.ShowDialog() = DialogResult.OK Then
            txtSchermLocatie.Text = OpenFileScreen.FileName
        End If
    End Sub

    Private Sub ToolStripButton27_Click(sender As Object, e As EventArgs)
        'Dim Write As New System.IO.StreamWriter(txtFolder.Text & "\afl" & numAflevering.Value + 1 & ".widmk")
        'Dim Read As New System.IO.StreamReader(txtFolder.Text & "\afl" & numAflevering.Value & ".widmk")
        'Write.Write(Read.ReadToEnd)
        'Read.Close()
        'Write.Close()
        'SaveXml()
        Dim templist As New ListBox
        'For Each item In listKandidaten.Items
        '    templist.Items.Add(item)
        'Next
        CurrentGroup.CurrentEpisode = CurrentGroup.CurrentEpisode + 1
        'For Each item In templist.Items
        '    listKandidaten.Items.Add(item)
        'Next
        'SaveXml()
        If My.Settings.language = "en" Then
            MsgBox("Candidates were copied!", MsgBoxStyle.Information)
        Else
            MsgBox("Kandidaten gekopieerd!", MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub numRuimteTussenAntwoorden_ValueChanged(sender As Object, e As EventArgs) _
        Handles numRuimteTussenAntwoorden.ValueChanged
    End Sub
    'Sub installocraext()
    '    Try
    '        Dim process As System.Diagnostics.Process = Nothing
    '        Dim processStartInfo As System.Diagnostics.ProcessStartInfo
    '        processStartInfo = New System.Diagnostics.ProcessStartInfo()
    '        processStartInfo.FileName = CurDir() & "\OCR A Extended\OCR A Extended installer.exe"
    '        processStartInfo.Verb = "runas"

    '        processStartInfo.Arguments = "/silent"
    '        processStartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal
    '        processStartInfo.UseShellExecute = True
    '        process = System.Diagnostics.Process.Start(processStartInfo)


    '        ' If process.Then Then
    '        ' System.Threading.Thread.Sleep(2000)
    '        ' If Dir("C:\Windows\Fonts\OCRAEXT.TTF") <> "" Then
    '        If My.Settings.language = "en" Then
    '            btnOCRAEXT.Text = "OCR A Extended is installed!"
    '        Else
    '            btnOCRAEXT.Text = "OCR A Extended is geïnstalleerd!"
    '        End If

    '        btnOCRAEXT.Enabled = False
    '        rOCRAEXT.Checked = True
    '        ' End If
    '        ' End If
    '    Catch ex As Exception

    '    End Try
    'End Sub
    'Private Sub Button11_Click_2(sender As Object, e As EventArgs)
    '    installocraext()
    'End Sub

    'Private Sub LinkLabel6_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
    '    Handles LinkLabel6.LinkClicked
    '    Dim lv As ListViewItem
    '    Dim lowestscoreName = ""
    '    Dim lowestscoreScore As Integer
    '    Dim lowestscoreTime As Integer
    '    For Each lv In listviewExecutie.Items
    '        If lv.SubItems(0).Text <> txtWieisdemol.Text And lv.SubItems(4).Text <> "Vrijstelling" Then
    '            If lowestscoreName = "" Then
    '                lowestscoreName = lv.SubItems(0).Text
    '                lowestscoreScore = Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)
    '                lowestscoreTime = lv.SubItems(2).Text
    '            Else
    '                'MsgBox(lv.SubItems(0).Text & " " & (Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)))
    '                'MsgBox(lowestscoreScore + Val(lv.SubItems(4).Text))
    '                If (Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)) < lowestscoreScore Then
    '                    'MsgBox(lv.SubItems(0).Text & " | PLACE | " & lv.SubItems(1).Text + Val(lv.SubItems(4).Text))
    '                    lowestscoreName = lv.SubItems(0).Text
    '                    lowestscoreScore = Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)
    '                    lowestscoreTime = lv.SubItems(2).Text
    '                ElseIf Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text) = (lowestscoreScore) Then
    '                    If lv.SubItems(2).Text > lowestscoreTime Then
    '                        lowestscoreName = lv.SubItems(0).Text
    '                        lowestscoreScore = Val(lv.SubItems(1).Text) + Val(lv.SubItems(4).Text)
    '                        lowestscoreTime = lv.SubItems(2).Text
    '                        'MsgBox(lv.SubItems(0).Text & " | TIME | " & lowestscoreScore)
    '                    End If
    '                End If
    '            End If
    '        End If
    '    Next
    '    Dim result
    '    If My.Settings.language = "en" Then
    '        result =
    '            MessageBox.Show(
    '                "The candidate with the lowest score is: " & lowestscoreName & vbCrLf &
    '                "Do you want to give this candidate a red screen?" & vbCrLf & vbCrLf &
    '                "Attention! This candidate can be The Mole!" & vbCrLf & "(Unless entered under group mode)",
    '                "Red screen?", MessageBoxButtons.YesNo)
    '    Else
    '        result =
    '            MessageBox.Show(
    '                "De kandidaat met de laagste score is: " & lowestscoreName & vbCrLf &
    '                "Wilt u deze kandidaat een rood scherm geven?" & vbCrLf & vbCrLf &
    '                "Let op! Deze kandidaat kan de mol zijn!" & vbCrLf &
    '                "(Tenzij de mol onder groepsmodus is aangegeven)", "Rood scherm?", MessageBoxButtons.YesNo)
    '    End If

    '    If result = DialogResult.Yes Then
    '        For Each lvitem As ListViewItem In listviewExecutie.Items
    '            If lvitem.SubItems(0).Text = lowestscoreName Then
    '                lvitem.SubItems(3).Text = "Rood"
    '                Exit For
    '            End If
    '        Next
    '    End If
    '    'MsgBox("De kandidaat met de laagste score is: " & lowestscoreName, MsgBoxStyle.Information)
    'End Sub

    Private Sub LinkLabel9_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs)

        If My.Settings.language = "en" Then
            MsgBox("Competition:" & vbCrLf &
                   "Only usable in alone mode. A file will be created after the quiz. This file can be send to others and loaded.",
                   MsgBoxStyle.Information)
        Else
            MsgBox("Wedstrijd:" & vbCrLf &
                   "Alleen te gebruiken in alleenmodus. Er zal na de test een bestand opgeslagen worden welke aan anderen kan worden gegeven en ingeladen kan worden.",
                   MsgBoxStyle.Information)
        End If
    End Sub

    'Sub OpenWedstrijdBestand()
    '    If OpenFileDialog12.ShowDialog() = DialogResult.OK Then
    '        Dim hashfile = ""
    '        Dim resultfile = ""
    '        Dim answersfile = ""
    '        Dim document As XmlReader = New XmlTextReader(OpenFileDialog12.FileName)

    '        While (document.Read())

    '            Dim type = document.NodeType
    '            If (type = XmlNodeType.Element) Then
    '                If (document.Name = "hash") Then
    '                    hashfile = document.ReadInnerXml.ToString
    '                End If
    '                If document.Name = "result" Then
    '                    resultfile = document.ReadInnerXml.ToString
    '                End If
    '                If document.Name = "answers" Then
    '                    answersfile = document.ReadInnerXml.ToString
    '                End If
    '            End If
    '        End While

    '        document.Close()

    '        'Dim lines() As String = IO.File.ReadAllLines(OpenFileDialog12.FileName)
    '        Dim source As String = resultfile

    '        Using md5Hash As MD5 = MD5.Create()

    '            Dim hash As String = hashfile

    '            If VerifyMd5Hash(md5Hash, [source], hash) Then
    '                Dim lineArray() As String = resultfile.Split("#") '// separate by "#" character.
    '                Dim newItem As New ListViewItem(lineArray(0)) '// add text Item.
    '                newItem.SubItems.Add(lineArray(1))
    '                newItem.SubItems.Add(lineArray(2)) '// add SubItem.
    '                newItem.SubItems.Add(lineArray(3)) '// add SubItem.
    '                newItem.SubItems.Add(lineArray(4))

    '                listviewExecutie.Items.Add(newItem) '// add Item to ListView.

    '                '-------

    '                Dim strLine() As String = answersfile.Split(vbNewLine)
    '                For Each item As String In strLine '// loop thru array list.
    '                    If item.Contains("#") Then
    '                        Dim lineArray2() As String = item.Split("#") '// separate by "#" character.
    '                        Dim answer As New GivenAnswer
    '                        answer.Number = lineArray2(0) '// add text Item.
    '                        'newItem.SubItems.Add(lineArray(0))
    '                        answer.Question = lineArray2(1)

    '                        Dim candidate As New Candidate
    '                        candidate.Name = lineArray2(2)

    '                        answer.Candidate = candidate
    '                        answer.Answer = lineArray2(3)
    '                        listAntwoorden.Items.Add(newItem2) '// add Item to ListView.
    '                    End If

    '                Next
    '            Else
    '                If My.Settings.language = "en" Then
    '                    MsgBox("The controle code doesn't correspond to the given answers.")
    '                Else
    '                    MsgBox("De controlecode komt niet overeen met de gegeven antwoorden.")
    '                End If

    '            End If
    '        End Using
    '    End If
    'End Sub

    Private Sub ToolStripButton28_Click_1(sender As Object, e As EventArgs)
        'OpenWedstrijdBestand()
    End Sub

    Shared Function GetMd5Hash(md5Hash As MD5, input As String) As String

        ' Convert the input string to a byte array and compute the hash. 
        Dim data As Byte() = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(input))

        ' Create a new Stringbuilder to collect the bytes 
        ' and create a string. 
        Dim sBuilder As New StringBuilder()

        ' Loop through each byte of the hashed data  
        ' and format each one as a hexadecimal string. 
        Dim i As Integer
        For i = 0 To data.Length - 1
            sBuilder.Append(data(i).ToString("x2"))
        Next i

        ' Return the hexadecimal string. 
        Return sBuilder.ToString()
    End Function 'GetMd5Hash

    Shared Function VerifyMd5Hash(md5Hash As MD5, input As String, hash As String) As Boolean
        ' Hash the input. 
        Dim hashOfInput As String = GetMd5Hash(md5Hash, input)

        ' Create a StringComparer an compare the hashes. 
        Dim comparer As StringComparer = StringComparer.OrdinalIgnoreCase

        If 0 = comparer.Compare(hashOfInput, hash) Then
            Return True
        Else
            Return False
        End If
    End Function 'VerifyMd5Hash

    Private Sub ToolStripButton29_Click(sender As Object, e As EventArgs) Handles ToolStripButton29.Click
        'OpenWedstrijdBestand()
    End Sub

    Private Sub Button12_Click_1(sender As Object, e As EventArgs) Handles btnLoad.Click
        LoadGroupmode()
        ReloadDataviews()
    End Sub

    Private Sub rStandaardInladen_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rStandaardInladen.CheckedChanged
        My.Settings.standaardinladen = rStandaardInladen.CheckState
    End Sub

    Private Sub rThreeRows_CheckedChanged(sender As Object, e As EventArgs) Handles rThreeRows.CheckedChanged
        My.Settings.threerows = rThreeRows.CheckState
    End Sub

    Private Sub ToolStripButton30_Click(sender As Object, e As EventArgs) Handles ToolStripButton30.Click
        'Dim sortCheckState As Boolean = rSorting.Checked
        'rSorting.Checked = True
        If SaveFileHTMLExport.ShowDialog() = DialogResult.OK Then
            Dim Write As New StreamWriter(SaveFileHTMLExport.FileName)
            Write.Write(My.Resources.htmlExport01)
            If My.Settings.language = "en" Then
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>#</th>" & vbCrLf & "<th>Question</th>" & vbCrLf & "<th>Candidate</th>" &
                    vbCrLf & "<th>Answer</th>" & vbCrLf & "</tr>")
            Else
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>#</th>" & vbCrLf & "<th>Vraag</th>" & vbCrLf & "<th>Kandidaat</th>" & vbCrLf &
                    "<th>Antwoord</th>" & vbCrLf & "</tr>")
            End If

            For Each item In CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).Answers
                Write.WriteLine("<tr>")
                Write.WriteLine("<td>" & item.Number & "</td>")
                Write.WriteLine("<td>" & item.Question & "</td>")
                Write.WriteLine("<td>" & item.Candidate & "</td>")
                Write.WriteLine("<td>" & item.Answer & "</td>")
                Write.WriteLine("</tr>")
            Next
            Write.WriteLine("</table>")
            If My.Settings.language = "en" Then
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print this page</a></p>")
            Else
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print deze pagina</a></p>")
            End If
            Write.WriteLine("</body>")
            Write.WriteLine("</html>")
            Write.Close()

            'rSorting.Checked = sortCheckState
            Try
                Process.Start(SaveFileHTMLExport.FileName)
            Catch ex As Exception
                Log(ex.ToString())
            End Try

        End If
    End Sub

    Private Sub CheckBox2_CheckedChanged(sender As Object, e As EventArgs) Handles rSaveAtClose.CheckedChanged
        If rSaveAtClose.Checked Then
            My.Settings.saveatclose = True
        Else
            My.Settings.saveatclose = False
        End If
    End Sub

    Private Sub ToolStripButton32_Click(sender As Object, e As EventArgs) Handles ToolStripButton32.Click
    End Sub

    Private Sub LinkLabel15_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs)
        Process.Start(
            "https://pattersonsupport.custhelp.com/app/answers/detail/a_id/13103/~/how-to-change-dpi-settings-in-windows-7")
    End Sub

    Private Sub LinkLabel14_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel14.LinkClicked
        Process.Start("http://koenvh.nl/widm")
    End Sub

    Private Sub LinkLabel16_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel16.LinkClicked
        My.Settings.Upgrade()
        If My.Settings.language = "en" Then
            MsgBox("The settings are imported. Restart WIDM Exam for the changes to take effect.",
                   MsgBoxStyle.Information)
        Else
            MsgBox("Instellingen zijn geimporteerd. Herstart WIDM Exam om de wijzigingen te zien.",
                   MsgBoxStyle.Information)
        End If
    End Sub

    Private Sub ToolStripButton33_Click(sender As Object, e As EventArgs) Handles ToolStripButton33.Click
        Try
            If My.Settings.language = "en" Then
                If My.Computer.FileSystem.FileExists(CurDir() & "\Documentation\WIDM Exam manual.pdf") Then
                    Process.Start(CurDir() & "\Documentation\WIDM Exam manual.pdf")
                Else
                    Process.Start(CurDir() & "\Documentatie\WIDM Exam manual.pdf")
                End If
            Else
                If My.Computer.FileSystem.FileExists(CurDir() & "\Documentation\WIDM Exam manual.pdf") Then
                    Process.Start(CurDir() & "\Documentation\WIDM Exam handleiding.pdf")
                Else
                    Process.Start(CurDir() & "\Documentatie\WIDM Exam handleiding.pdf")
                End If
            End If

        Catch ex As Exception
            If My.Settings.language = "en" Then
                MsgBox("The manual could not be opened! Please try to open it manually." & vbCrLf & "(Ba dum tsh)",
                       MsgBoxStyle.Exclamation)
            Else
                MsgBox("De handleiding kon niet geopend worden. Probeer deze handmatig te openen!",
                       MsgBoxStyle.Exclamation)
            End If
        End Try
    End Sub

    Private Sub rExecutiePauze_CheckedChanged(sender As Object, e As EventArgs) Handles rLangereGeluiden.CheckedChanged
        My.Settings.rLangereGeluiden = rLangereGeluiden.Checked
    End Sub

    Private Sub rMuziekAfspelen_CheckedChanged(sender As Object, e As EventArgs) Handles rMuziekAfspelen.CheckedChanged
        My.Settings.rMuziekAfspelen = rMuziekAfspelen.Checked
    End Sub

    Private Sub rMusic_CheckedChanged(sender As Object, e As EventArgs) Handles rAfscheidsmuziek.CheckedChanged
        My.Settings.rAfscheidsmuziek = rAfscheidsmuziek.Checked
    End Sub

    Private Sub rSchermGeluid_CheckedChanged(sender As Object, e As EventArgs) Handles rSchermGeluid.CheckedChanged
        My.Settings.rSchermGeluid = rSchermGeluid.Checked
    End Sub

    Private Sub rContinuePlaying_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rMuziekDoorspelen.CheckedChanged
        My.Settings.rMuziekDoorspelen = rMuziekDoorspelen.Checked
    End Sub

    Private Sub Button18_Click(sender As Object, e As EventArgs)
        'Dim sDialog As New SaveFileDialog()
        'sDialog.DefaultExt = ".txt"
        'sDialog.Filter = "txt|*.txt"

        'If sDialog.ShowDialog() = DialogResult.OK Then

        '    Using sWriter As New System.IO.StreamWriter(sDialog.FileName)

        '        For i As Integer = Me.Controls.Count - 1 To 0 Step -1

        '            sWriter.WriteLine(Me.Controls(i).Name & "," & Me.Controls(i).Text)

        '        Next

        '    End Using

        '    My.Settings.Save()
        '    If My.Settings.language = "en" Then
        '        MessageBox.Show("Settings are exported.", "Export", MessageBoxButtons.OK, MessageBoxIcon.Information)
        '    Else
        '        MessageBox.Show("Instellingen zijn geëxporteerd.", "Exporteren", MessageBoxButtons.OK, MessageBoxIcon.Information)
        '    End If


        'End If
        SaveGroupmode()
    End Sub

    Private Sub Button23_Click(sender As Object, e As EventArgs)
        LoadGroupmode()
        ReloadDataviews()
    End Sub

    Private Sub ToolStripButton35_Click(sender As Object, e As EventArgs) Handles ToolStripButton35.Click
        LaatsteVraagInladen()
    End Sub

    Private Sub ToolStripButton23_Click(sender As Object, e As EventArgs)
        If MsgBox(GetLang("ClearListWarning"), MsgBoxStyle.YesNo Or MsgBoxStyle.Question) = MsgBoxResult.Yes Then
            listCandidates.Items.Clear()
        End If
    End Sub

    'Private Sub Button4_Click_1(sender As Object, e As EventArgs) Handles Button4.Click
    '    For Each li As ListViewItem In listviewExecutie.SelectedItems
    '        li.SubItems(0).Text = txtListviewAddKandidaat.Text
    '        li.SubItems(1).Text = txtListviewAntw.Value
    '        li.SubItems(2).Text = txtListviewTijd.Value
    '        li.SubItems(3).Text = txtListviewScherm.Text
    '        li.SubItems(4).Text = txtListViewJokers.Text
    '        txtListviewAddKandidaat.Text = ""
    '        txtListviewAntw.Value = 0
    '        txtListviewTijd.Value = 0
    '        txtListviewScherm.SelectedItem = "Groen"
    '        txtListViewJokers.SelectedItem = "0"
    '    Next
    'End Sub

    Private Sub rGeluidTest_CheckedChanged(sender As Object, e As EventArgs) Handles rGeluidTest.CheckedChanged
        My.Settings.rGeluidTest = rGeluidTest.CheckState
    End Sub

    'Private Sub LinkLabel17_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
    '    Handles LinkLabel17.LinkClicked
    '    Dim lv As ListViewItem
    '    Dim highestName = ""
    '    Dim highestScore As Integer
    '    Dim highestTime As Integer
    '    For Each lv In listviewExecutie.Items
    '        If lv.SubItems(0).Text <> txtWieisdemol.Text Then
    '            If highestName = "" Then
    '                highestName = lv.SubItems(0).Text
    '                highestScore = lv.SubItems(1).Text + Val(lv.SubItems(4).Text) 'Val("Vrijstelling") = 0
    '                highestTime = lv.SubItems(2).Text
    '            Else
    '                If lv.SubItems(1).Text + Val(lv.SubItems(4).Text) > highestScore Then
    '                    highestName = lv.SubItems(0).Text
    '                    highestScore = lv.SubItems(1).Text + Val(lv.SubItems(4).Text)
    '                    highestTime = lv.SubItems(2).Text
    '                ElseIf lv.SubItems(1).Text + Val(lv.SubItems(4).Text) = highestScore Then
    '                    If lv.SubItems(2).Text < highestTime Then
    '                        highestName = lv.SubItems(0).Text
    '                        highestScore = lv.SubItems(1).Text + Val(lv.SubItems(4).Text)
    '                        highestTime = lv.SubItems(2).Text
    '                    End If
    '                End If
    '            End If
    '        End If
    '    Next
    '    Dim result
    '    If My.Settings.language = "en" Then
    '        result =
    '            MessageBox.Show(
    '                "The candidate with the highest score is: " & highestName & vbCrLf &
    '                "Do you want to give a red screen to the other candidates?" & vbCrLf & vbCrLf &
    '                "Attention! This candidate could be The Mole!" & vbCrLf &
    '                "(Unless The Mole is entered under group mode)", "Red screen?", MessageBoxButtons.YesNo)
    '    Else
    '        result =
    '            MessageBox.Show(
    '                "De kandidaat met de hoogste score is: " & highestName & vbCrLf &
    '                "Wilt u de andere kandidaten een rood scherm geven?" & vbCrLf & vbCrLf &
    '                "Let op! Deze kandidaat kan de mol zijn!" & vbCrLf &
    '                "(Tenzij de mol onder groepsmodus is aangegeven)", "Rood scherm?", MessageBoxButtons.YesNo)
    '    End If

    '    If result = DialogResult.Yes Then
    '        For Each lvitem As ListViewItem In listviewExecutie.Items
    '            If Not lvitem.SubItems(0).Text = highestName Then
    '                lvitem.SubItems(3).Text = "Rood"
    '                'Exit For
    '            End If
    '        Next
    '    End If
    'End Sub

    Private Sub LinkLabel18_LinkClicked_1(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel18.LinkClicked
        ExportSettings()
    End Sub

    Private Sub LinkLabel19_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel19.LinkClicked
        ImportSettings()
    End Sub

    Private Sub EnglishToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles EnglishToolStripMenuItem.Click
        My.Settings.language = "en"
        Thread.CurrentThread.CurrentUICulture = New CultureInfo("EN")
        btnLanguage.Image = My.Resources.gb
        Dim result =
                MessageBox.Show(
                    "Please restart WIDM Exam for the changes to take effect." & vbCrLf & "Do you want to restart now?",
                    "Restart", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
        If result = MsgBoxResult.Yes Then
            Application.Restart()
        End If
    End Sub

    Private Sub NederlandsToolStripMenuItem_Click(sender As Object, e As EventArgs) _
        Handles NederlandsToolStripMenuItem.Click
        My.Settings.language = "nl"
        Thread.CurrentThread.CurrentUICulture = New CultureInfo("NL")
        btnLanguage.Image = My.Resources.nl
        Dim result =
                MessageBox.Show(
                    "Herstart WIDM Exam om de wijzigingen te zien." & vbCrLf & "Wilt u WIDM Exam nu herstarten?",
                    "Herstarten", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
        If result = MsgBoxResult.Yes Then
            Application.Restart()
        End If
    End Sub

    Private Sub btnLanguage_Click(sender As Object, e As EventArgs) Handles btnLanguage.Click
        Dim p As New Point(btnLanguage.Location.X, btnLanguage.Location.Y + btnLanguage.Size.Height)

        Me.contextLanguages.Show(Me, p)
    End Sub

    Private Sub Button5_Click_1(sender As Object, e As EventArgs) Handles Button5.Click
        If OpenFileGroupImport.ShowDialog() = DialogResult.OK Then
            Try

                Dim objStreamReader As New IO.StreamReader(OpenFileGroupImport.FileName)
                Dim tempGroup As Groupmode = JsonConvert.DeserializeObject(Of Groupmode)(objStreamReader.ReadToEnd())
                objStreamReader.Close()

                For Each candidate As KeyValuePair(Of String, Candidate) In tempGroup.Candidates
                    If Not CurrentGroup.Candidates.ContainsKey(candidate.Key) Then
                        CurrentGroup.CandidateAdd(candidate.Value)
                    End If
                Next

                For Each episode As KeyValuePair(Of Integer, Episode) In tempGroup.Episodes
                    For Each answer In tempGroup.Episodes(episode.Key).Answers
                        CurrentGroup.Episodes(episode.Key).Answers.Add(answer)
                    Next
                    For Each result As KeyValuePair(Of String, ExecutionResult) In tempGroup.Episodes(episode.Key).ExecutionResults
                        If Not CurrentGroup.Episodes(episode.Key).ExecutionResults.ContainsKey(result.Key) Then
                            CurrentGroup.ExecutionAdd(result.Value, episode.Key)
                        End If
                    Next
                Next
                ReloadDataviews()
                MsgBox(GetLang("ImportSuccess"), MsgBoxStyle.Information)
            Catch ex As Exception
                Log(ex.ToString())
                MsgBox(ex.Message, MsgBoxStyle.Exclamation)
            End Try
        End If


        'FolderBrowserDialog2.Description = GetLang("FolderBrowserDialog2")
        'If FolderBrowserDialog2.ShowDialog() = DialogResult.OK Then
        '    Try
        '        Dim document As XmlReader
        '        document = New XmlTextReader(FolderBrowserDialog2.SelectedPath & "\afl" & numAflevering.Value & ".widm")

        '        Dim answers() As String = {""}
        '        Dim execution() As String = {""}
        '        While (document.Read())


        '            Dim type = document.NodeType


        '            If (type = XmlNodeType.Element) Then
        '                If (document.Name = "answers") Then
        '                    answers = (WebUtility.HtmlDecode(document.ReadInnerXml.ToString)).Split(vbNewLine)
        '                End If
        '                If (document.Name = "execution") Then
        '                    execution = (document.ReadInnerXml.ToString).Split(vbNewLine)
        '                End If
        '            End If
        '        End While
        '        For Each line As String In answers.Skip(1) '// loop thru array list.
        '            Dim lineArray() As String = line.Split("#") '// separate by "#" character.
        '            Dim newItem As New ListViewItem(Replace(lineArray(0).ToString.PadLeft(3), vbLf, "")) _
        '            '// add text Item.

        '            Try
        '                newItem.SubItems.Add(lineArray(1))
        '                newItem.SubItems.Add(lineArray(2))
        '                newItem.SubItems.Add(lineArray(3))
        '            Catch ex As Exception

        '            End Try

        '            'End If
        '            Me.listAntwoorden.Items.Add(newItem) '// add Item to ListView.
        '        Next
        '        For Each line2 As String In execution.Skip(1) '// loop thru array list.
        '            Dim lineArray() As String = line2.Split("#") '// separate by "#" character.
        '            Dim newItem As New ListViewItem(Replace(lineArray(0).ToString.PadLeft(3), vbLf, "")) _
        '            '// add text Item.

        '            Try
        '                newItem.SubItems.Add(lineArray(1))
        '                newItem.SubItems.Add(lineArray(2))
        '                newItem.SubItems.Add(lineArray(3))
        '                newItem.SubItems.Add(lineArray(4))
        '            Catch ex As Exception

        '            End Try

        '            'End If
        '            Me.listviewExecutie.Items.Add(newItem) '// add Item to ListView.
        '        Next
        '        MsgBox(GetLang("ImportSuccess"))
        '    Catch ex As Exception
        '        MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        '    End Try
        'End If
    End Sub

    Private Sub FolderBrowserDialog2_HelpRequest(sender As Object, e As EventArgs)

    End Sub

    Private Sub rNummers_CheckedChanged(sender As Object, e As EventArgs) Handles rNummers.CheckedChanged
        My.Settings.rNummers = rNummers.CheckState
    End Sub

    Private Sub rBackup_CheckedChanged(sender As Object, e As EventArgs) Handles rBackup.CheckedChanged
        If rBackup.Checked Then
            My.Settings.rBackup = True
            Panel7.Enabled = True
        Else
            My.Settings.rBackup = False
            Panel7.Enabled = False
        End If
    End Sub

    Private Sub ToolStripButton8_Click_1(sender As Object, e As EventArgs) Handles ToolStripButton8.Click
        If My.Settings.language = "en" Then
            Process.Start("http://koenvh.nl/en/contact")
        Else
            Process.Start("http://koenvh.nl/nl/contact")
        End If
    End Sub

    Public Sub CallVirtualKeyboard()
        If Me.rVirtualKeyboard.Checked = True Then
            Try

                FrmEnterName.Panel1.Top = (FrmEnterName.Height / 4) - (FrmEnterName.Panel1.Height / 2)
                FrmEnterName.Panel2.Top = (FrmEnterName.Height / 4) - (FrmEnterName.Panel2.Height / 2)
                FrmEnterName.Panel3.Top = (FrmEnterName.Height / 4) - (FrmEnterName.Panel3.Height / 2)

                FrmStartExecutie.Panel1.Top = (FrmStartExecutie.Height / 4) - (FrmStartExecutie.Panel1.Height / 2)
                FrmStartExecutie.Panel2.Top = (FrmStartExecutie.Height / 4) - (FrmStartExecutie.Panel2.Height / 2)
                FrmStartExecutie.Panel3.Top = (FrmStartExecutie.Height / 4) - (FrmStartExecutie.Panel3.Height / 2)
                Process.Start("C:\Program Files\Common Files\Microsoft Shared\ink\TabTip.exe")
            Catch ex As Exception
                Log(ex.ToString())
            End Try

        End If
    End Sub

    Public Sub KillVirtualKeyboard()
        If Me.rVirtualKeyboard.Checked = True Then
            Try
                Dim pProcess() As Process = Process.GetProcessesByName("TabTip")

                For Each p As Process In pProcess
                    p.Kill()
                Next
                FrmEnterName.Panel1.Top = (FrmEnterName.Height / 2) - (FrmEnterName.Panel1.Height / 2)
                FrmEnterName.Panel2.Top = (FrmEnterName.Height / 2) - (FrmEnterName.Panel2.Height / 2)
                FrmEnterName.Panel3.Top = (FrmEnterName.Height / 2) - (FrmEnterName.Panel3.Height / 2)

                FrmStartExecutie.Panel1.Top = (FrmStartExecutie.Height / 2) - (FrmStartExecutie.Panel1.Height / 2)
                FrmStartExecutie.Panel2.Top = (FrmStartExecutie.Height / 2) - (FrmStartExecutie.Panel2.Height / 2)
                FrmStartExecutie.Panel3.Top = (FrmStartExecutie.Height / 2) - (FrmStartExecutie.Panel3.Height / 2)
            Catch ex As Exception
                Log(ex.ToString())
            End Try
        End If
    End Sub

    Private Sub rOnscreenKeyboard_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rVirtualKeyboard.CheckedChanged
        If rVirtualKeyboard.Checked = True Then
            My.Settings.rVirtualKeyboard = True
        Else
            My.Settings.rVirtualKeyboard = False
        End If
    End Sub

    Private Sub ToolStripButton15_Click_1(sender As Object, e As EventArgs)
    End Sub

    Private Sub rNumberBeforeQuestion_CheckedChanged(sender As Object, e As EventArgs) _
        Handles rNumberBeforeQuestion.CheckedChanged
        If rNumberBeforeQuestion.Checked Then
            My.Settings.rNumberBeforeQuestion = True
        Else
            My.Settings.rNumberBeforeQuestion = False
        End If
    End Sub


    Private Sub txtIP_LostFocus(sender As Object, e As EventArgs) Handles txtIP.LostFocus

        Dim rx As New Regex("^(?:(?:25[0-5]|2[0-4]\d|[01]\d\d|\d?\d)(?(?=\.?\d)\.)){4}$")

        If Not rx.IsMatch(txtIP.Text) Then
            MessageBox.Show("The IP address is not in proper format!")
            txtIP.SelectAll()
        End If
    End Sub

    Private Sub txtIP_TextChanged(sender As Object, e As EventArgs) Handles txtIP.TextChanged
    End Sub

    Private Sub Label49_Click(sender As Object, e As EventArgs) Handles Label49.Click
    End Sub

    Private Sub rRandom_CheckedChanged(sender As Object, e As EventArgs) Handles rRandom.CheckedChanged
        If rRandom.Checked Then
            My.Settings.rRandom = True
        Else
            My.Settings.rRandom = False
        End If
    End Sub

    Sub ConvertXmLtoText(loc As String, episode As String, grafiekType As String)
        Try
            Dim execution() As String = {""}


            Dim document As XmlReader
            document = New XmlTextReader(loc)
            While (document.Read())

                Dim type = document.NodeType


                If (type = XmlNodeType.Element) Then
                    If (document.Name = "execution") Then
                        execution = (WebUtility.HtmlDecode(document.ReadInnerXml.ToString)).Split(vbNewLine)
                    End If
                End If

            End While

            document.Close()
            For Each line2 As String In execution.Skip(1) '// loop thru array list.
                Dim lineArray() As String = line2.Split("#") '// separate by "#" character.

                Console.WriteLine(lineArray(0).ToString)
                Try
                    TotalRightAnswers = TotalRightAnswers + lineArray(1)
                    txtTotalRightAnswers.Text = TotalRightAnswers
                    TotalTime = TotalTime + lineArray(2)
                    txtTotalTime.Text = TotalTime
                    If grafiekType = "answersright" Then
                        Chart1.Series(Replace(lineArray(0), vbLf, "")).Points.AddXY(episode, lineArray(1))
                    ElseIf grafiekType = "time" Then
                        Chart1.Series(Replace(lineArray(0), vbLf, "")).Points.AddXY(episode, lineArray(2))
                    End If


                    'Dim newItem As New ListViewItem
                    'newItem.SubItems.Add(episode.PadLeft(2))
                    'newItem.SubItems.Add(Replace(lineArray(0), vbLf, "").ToString)
                    'newItem.SubItems.Add(lineArray(1))
                    'listSortStatistics.Items.Add(newItem) '// add Item to ListView.
                Catch ex As Exception
                    Console.WriteLine(ex.Message)
                End Try
            Next
        Catch ex As Exception

        End Try
    End Sub

    Sub LoadChart(grafiekType As String)
        Try
            If My.Settings.folder <> "" Then
                Chart1.Series.Clear()
                TotalRightAnswers = 0
                TotalTime = 0

                Dim tempTime As Integer = 0
                Dim tempAnswersRight As Integer = 0

                For Each item In CurrentGroup.Candidates.Values
                    Console.WriteLine(item.Name)
                    Chart1.Series.Add(item.Name)
                    Chart1.Series(item.Name).IsXValueIndexed = False
                    Chart1.Series(item.Name).Name = item.Name
                    'Chart1.Series(item.Name).IsXValueIndexed = True
                    Chart1.Series(item.Name).MarkerStyle = MarkerStyle.Circle
                    '  Chart1.Series(item).Sort(SortOrder.Ascending, "X")

                    Chart1.Series(item.Name).ChartType = SeriesChartType.Line
                    If grafiekType = "answersright" Then
                        For Each ep In CurrentGroup.Episodes
                            If ep.Value.ExecutionResults.ContainsKey(item.Name) Then
                                Chart1.Series(item.Name).Points.AddXY(ep.Key, ep.Value.ExecutionResults(item.Name).AnswersRight)
                            End If
                        Next
                    ElseIf grafiekType = "time" Then
                        For Each ep In CurrentGroup.Episodes
                            If ep.Value.ExecutionResults.ContainsKey(item.Name) Then
                                Chart1.Series(item.Name).Points.AddXY(ep.Key, ep.Value.ExecutionResults(item.Name).Time)
                            End If
                        Next
                    End If

                    For Each ep In CurrentGroup.Episodes
                        For Each result In ep.Value.ExecutionResults
                            tempTime = tempTime + result.Value.Time
                            tempAnswersRight = tempAnswersRight + result.Value.AnswersRight
                        Next
                    Next
                    txtTotalTime.Text = tempTime
                    txtTotalRightAnswers.Text = tempAnswersRight

                Next
            Else
                MsgBox(GetLang("Folder"), MsgBoxStyle.Exclamation)
            End If
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try

    End Sub

    Private Sub Button30_Click(sender As Object, e As EventArgs) Handles Button30.Click

        Chart1.Titles("Title2").Text = "Antwoorden goed/Answers right"
        LoadChart("answersright")
    End Sub

    Private Sub Button31_Click_1(sender As Object, e As EventArgs) Handles Button31.Click
        Dim save As New SaveFileDialog
        save.Filter = "Portable Network Graphics (*.png)|*.png"
        save.FileName = ""
        If save.ShowDialog() = DialogResult.OK Then
            Chart1.SaveImage(save.FileName, ImageFormat.Png)
        End If
    End Sub

    Private Sub Button32_Click(sender As Object, e As EventArgs) Handles Button32.Click
        Chart1.Titles("Title2").Text = "Tijd/Time"
        LoadChart("time")
    End Sub

    Private Sub OmgekeerdToolStripMenuItem_Click(sender As Object, e As EventArgs) _
        Handles OmgekeerdToolStripMenuItem.Click
        tRightToLeft.Start()
    End Sub

    Private Sub tRightToLeft_Tick(sender As Object, e As EventArgs) Handles tRightToLeft.Tick
        Try
            For Each f As Form In My.Application.OpenForms
                f.RightToLeftLayout = True
                f.RightToLeft = RightToLeft.Yes
                For Each c As Label In f.Controls
                    c.Text = "Trolololo"
                Next
            Next
        Catch ex As Exception

        End Try
    End Sub

    Private Sub Button33_Click(sender As Object, e As EventArgs) Handles Button33.Click
        If My.Settings.language = "en" Then
            Process.Start("https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=K6WY5VNJUXKDQ")
        Else
            Process.Start("http://koenvh.nl/nl/donate")
        End If
    End Sub

    Private Sub rGroep_CheckedChanged(sender As Object, e As EventArgs) Handles rGroep.CheckedChanged
    End Sub

    Private Sub ToolStripComboBox1_Click(sender As Object, e As EventArgs) Handles ToolStripExecutionScreen.Click
    End Sub

    Private Sub txtListViewJokers_SelectedIndexChanged(sender As Object, e As EventArgs) _
        Handles txtListViewJokers.SelectedIndexChanged
    End Sub

    Private Sub rMonitor_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rMonitor.SelectedIndexChanged
        If StartedUp = True Then
            My.Settings.rMonitor = rMonitor.SelectedIndex
        End If
    End Sub

    Private Sub LinkLabel20_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs) _
        Handles LinkLabel20.LinkClicked
        FrmIdentify.Show()
    End Sub

    Private Sub LinkLabel21_LinkClicked(sender As Object, e As LinkLabelLinkClickedEventArgs)
    End Sub

    Private Sub Button34_Click(sender As Object, e As EventArgs)
    End Sub

    'Private Sub Button35_Click(sender As Object, e As EventArgs) Handles Button35.Click
    '    'Convert Vrijstellingen to a large number for comparing purposes. The comparer does not like comparing integers that aren't integers :)
    '    For Each item As ListViewItem In listviewExecutie.Items
    '        If item.SubItems(4).Text = "Vrijstelling" Then
    '            item.SubItems(4).Text = "214748364" '32-bit INT limit - 1
    '        End If
    '    Next

    '    ' Determine whether the column is the same as the last column clicked.

    '    ' Set the sort column to the new column.
    '    _sortColumn = listviewExecutie.Columns(1).Index

    '    ' Set the sort order to ascending by default.
    '    listviewExecutie.Sorting = SortOrder.Descending

    '    ' Call the sort method to manually sort.
    '    listviewExecutie.Sort()
    '    ' Set the ListViewItemSorter property to a new ListViewItemComparer
    '    ' object.
    '    listviewExecutie.ListViewItemSorter = New ListViewItemComparerInteger(listviewExecutie.Columns(1).Index,
    '                                                                          listviewExecutie.Columns(4).Index,
    '                                                                          listviewExecutie.Sorting)


    '    'Okay, now let's find the ones with the same score
    '    'At the moment, Jokers and Vrijstellingen (exemptions) are not supported, as the sorting mechanism does not count those up :)
    '    For i = 0 To listviewExecutie.Items.Count - 2
    '        'If IsNumeric(listviewExecutie.Items(i).SubItems(4).Text) Then
    '        'Try
    '        If _
    '            CInt(listviewExecutie.Items(i).SubItems(1).Text) + CInt(listviewExecutie.Items(i).SubItems(4).Text) =
    '            CInt(listviewExecutie.Items(i + 1).SubItems(1).Text) +
    '            CInt(listviewExecutie.Items(i + 1).SubItems(4).Text) Then
    '            If _
    '                CInt(listviewExecutie.Items(i).SubItems(2).Text) >
    '                CInt(listviewExecutie.Items(i + 1).SubItems(2).Text) Then
    '                Dim tItem As ListViewItem
    '                tItem = Me.listviewExecutie.Items(i + 1)
    '                Me.listviewExecutie.Items(i + 1) = Me.listviewExecutie.Items(i).Clone
    '                Me.listviewExecutie.Items(i) = tItem.Clone
    '                'MsgBox("Moved!")

    '                i -= 2
    '                If i < 0 Then
    '                    i = 0
    '                End If
    '            Else
    '                'MsgBox(listviewExecutie.Items(i).SubItems(2).Text & "<=" & listviewExecutie.Items(i).SubItems(2).Text > listviewExecutie.Items(i + 1).Text)
    '            End If
    '        Else

    '        End If
    '        'Catch ex As Exception

    '        'End Try

    '        'End If
    '    Next

    '    'Convert them back to Vrijstellingen
    '    For Each item As ListViewItem In listviewExecutie.Items
    '        If item.SubItems(4).Text = "214748364" Then
    '            item.SubItems(4).Text = "Vrijstelling" '32-bit INT limit - 1
    '        End If
    '    Next
    'End Sub

    Private Sub Button36_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub ToolStripButtonTheme_Click(sender As Object, e As EventArgs) Handles ToolStripButtonTheme.Click
        Dim form As New FrmTheme
        form.Show()
    End Sub
    Sub ReloadThemes()
        Try
            comboThemes.Items.Clear()
            For Each foundFile As String In My.Computer.FileSystem.GetFiles(CurDir() & "\Thema's\")
                If foundFile.EndsWith(".widmthema") Then
                    comboThemes.Items.Add(Path.GetFileName(foundFile))
                End If
            Next
        Catch ex As Exception
            Log(ex.ToString())
        End Try

    End Sub

    Private Sub btnReloadThemes_Click(sender As Object, e As EventArgs) Handles btnReloadThemes.Click
        ReloadThemes()
    End Sub

    Private Sub comboThemes_SelectedValueChanged(sender As Object, e As EventArgs) Handles comboThemes.SelectedValueChanged

    End Sub

    Private Sub comboThemes_SelectedIndexChanged(sender As Object, e As EventArgs) Handles comboThemes.SelectedIndexChanged
        My.Settings.CurrentTheme = comboThemes.Text
        My.Settings.Save()
    End Sub

    Private Sub btnSaveTheme_Click(sender As Object, e As EventArgs) Handles btnEditTheme.Click
        Dim form As New FrmTheme(comboThemes.Text)
        form.Show()
    End Sub

    Private Sub txtWieisdemol_SelectedIndexChanged(sender As Object, e As EventArgs) Handles txtWieisdemol.SelectedIndexChanged

    End Sub

    Private Sub txtWieisdemol_TextChanged(sender As Object, e As EventArgs) Handles txtWieisdemol.TextChanged
        Try
            CurrentGroup.Mole = CurrentGroup.Candidates(txtWieisdemol.Text)
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try

    End Sub

    Private Sub EditCandidate(ByVal messages As Boolean)
        Try
            If Not listCandidates.SelectedItems.Count = 0 Then
                txtCandidateName.Text = listCandidates.SelectedItems(0).Text
                listCandidateActive.Items.Clear()
                Dim count As Integer = 1
                For Each item As KeyValuePair(Of Integer, Episode) In CurrentGroup.Episodes
                    If CurrentGroup.Candidates(listCandidates.SelectedItems(0).Text).Active.ContainsKey(item.Key) Then
                        listCandidateActive.Items.Add(GetLang("Aflevering") & item.Key, CurrentGroup.Candidates(listCandidates.SelectedItems(0).Text).Active(item.Key))
                    Else
                        listCandidateActive.Items.Add(GetLang("Aflevering") & item.Key, False)
                    End If
                    listCandidateActive.SetItemChecked(0, True)
                Next
            Else
                If messages Then MsgBox(GetLang("SelectItemFirst"), MsgBoxStyle.Exclamation)
            End If
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ClearUpCandidate()
        txtCandidateName.Clear()
        listCandidateActive.Items.Clear()

        For Each item As KeyValuePair(Of Integer, Episode) In CurrentGroup.Episodes
            listCandidateActive.Items.Add(GetLang("Aflevering") & item.Key, False)
            listCandidateActive.SetItemChecked(0, True)
        Next
    End Sub

    Private Sub listCandidates_MouseDoubleClick(sender As Object, e As MouseEventArgs) Handles listCandidates.MouseDoubleClick
        EditCandidate(True)
    End Sub

    Private Sub ToolStripEditCandidate_Click(sender As Object, e As EventArgs) Handles ToolStripEditCandidate.Click
        EditCandidate(True)
    End Sub

    Private Sub btnCandidateEdit_Click(sender As Object, e As EventArgs) Handles btnCandidateEdit.Click
        If Not listCandidates.SelectedItems.Count = 0 Then
            Dim candidate As New Candidate
            candidate.Name = txtCandidateName.Text
            Dim count = 0
            For Each ep In listCandidateActive.Items
                candidate.Active.Add(CInt(Replace(ep.ToString(), GetLang("Aflevering"), "")), listCandidateActive.GetItemCheckState(count))
                count += 1
            Next
            CurrentGroup.CandidateRemove(listCandidates.SelectedItems(0).Text)
            CurrentGroup.CandidateAdd(candidate)
            ReloadCandidates()
            ClearUpCandidate()
        Else
            MsgBox(GetLang("SelectItemFirst"), MsgBoxStyle.Exclamation)
        End If
    End Sub

    Private Sub listCandidates_MouseClick(sender As Object, e As MouseEventArgs) Handles listCandidates.MouseClick

    End Sub

    Private Sub btnCandidateAdd_Click(sender As Object, e As EventArgs) Handles btnCandidateAdd.Click
        If Not CurrentGroup.Candidates.ContainsKey(txtCandidateName.Text) Then
            Dim candidate As New Candidate
            candidate.Name = txtCandidateName.Text
            Dim count = 0
            For Each ep In listCandidateActive.Items
                candidate.Active.Add(CInt(Replace(ep.ToString(), GetLang("Aflevering"), "")), listCandidateActive.GetItemCheckState(count))
                count += 1
            Next
            CurrentGroup.CandidateAdd(candidate)
            ReloadCandidates()
            ClearUpCandidate()
        Else
            ReloadCandidates()
            MsgBox(GetLang("CandidateAlreadyExists"), MsgBoxStyle.Exclamation)
        End If
    End Sub

    Private Sub listCandidates_SelectedItemsChanged(sender As Object, eventArgs As BetterListViewSelectedItemsChangedEventArgs) Handles listCandidates.SelectedItemsChanged
        If Not listCandidates.SelectedItems.Count = 0 Then
            btnCandidateEdit.Enabled = True
            ToolStripEditCandidate.Enabled = True
        Else
            btnCandidateEdit.Enabled = False
            ToolStripEditCandidate.Enabled = False
        End If
    End Sub

    Private Sub ToolStripAddCandidate_Click(sender As Object, e As EventArgs)
        ClearUpCandidate()
    End Sub

    Private Sub ToolStripReloadCandidate_Click(sender As Object, e As EventArgs) Handles ToolStripReloadCandidate.Click
        ReloadDataviews()
    End Sub

    Private Sub RemoveCandidate()
        Try
            CurrentGroup.CandidateRemove(listCandidates.SelectedItems(0).Text)
            ReloadCandidates()
        Catch ex As Exception
            Log(ex.ToString())
        End Try
    End Sub

    Private Sub ToolStripRemoveCandidate_Click(sender As Object, e As EventArgs) Handles ToolStripRemoveCandidate.Click
        RemoveCandidate()
    End Sub

    Private Sub RemoveAnswer()
        If Not listAnswers.SelectedItems.Count = 0 Then
            Try
                For Each item As BetterListViewItem In listAnswers.SelectedItems
                    CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).Answers.RemoveAt(item.Index)
                    listAnswers.Items.RemoveAt(item.Index)
                Next
            Catch ex As Exception
                Log(ex.ToString())
                MsgBox(ex.Message, MsgBoxStyle.Exclamation)
            End Try

        Else
            MsgBox(GetLang("SelectItemFirst"), MsgBoxStyle.Exclamation)
        End If
        ReloadAnswers()
    End Sub

    Private Sub ToolStripButton25_Click(sender As Object, e As EventArgs) Handles ToolStripAnswersRemove.Click
        RemoveAnswer()
    End Sub

    Private Sub ToolStripButton13_Click(sender As Object, e As EventArgs) Handles ToolStripAnswersClear.Click
        Try
            If MsgBox(GetLang("ClearListWarning"), MsgBoxStyle.YesNo Or MsgBoxStyle.Question) = MsgBoxResult.Yes Then
                CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).Answers.Clear()
                ReloadAnswers()
            End If
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ToolStripAnswersReload_Click(sender As Object, e As EventArgs) Handles ToolStripAnswersReload.Click
        ReloadDataviews()
    End Sub

    Private Sub ToolStripExecutionReload_Click(sender As Object, e As EventArgs) Handles ToolStripExecutionReload.Click
        ReloadDataviews()
    End Sub

    Private Sub ToolStripScreensReload_Click(sender As Object, e As EventArgs) Handles ToolStripScreensReload.Click
        ReloadDataviews()
    End Sub

    Private Sub listExecution_SelectedIndexChanged(sender As Object, e As EventArgs) Handles listExecution.SelectedIndexChanged

    End Sub

    Private Sub listExecution_SelectedItemsChanged(sender As Object, eventArgs As BetterListViewSelectedItemsChangedEventArgs) Handles listExecution.SelectedItemsChanged
        If Not listExecution.SelectedItems.Count = 0 Then
            btnExecutionEdit.Enabled = True
            ToolStripExecutionEdit.Enabled = True
        Else
            btnExecutionEdit.Enabled = False
            ToolStripExecutionEdit.Enabled = False
        End If
    End Sub

    Private Sub btnExecutionAdd_Click(sender As Object, e As EventArgs) Handles btnExecutionAdd.Click
        Try
            If txtListViewJokers.Text = Vrijstelling Then
                txtListViewJokers.Text = "214748364"
            End If
            CurrentGroup.ExecutionAdd(txtListviewAddKandidaat.Text, txtListviewAntw.Value, txtListviewTijd.Value, txtListviewScherm.Text, CInt(txtListViewJokers.Text))
            ReloadExecution()
            txtListviewAddKandidaat.Clear()
            txtListviewAntw.Value = 0
            txtListviewTijd.Value = 0
            txtListviewScherm.SelectedIndex = 0
            txtListViewJokers.SelectedIndex = 0
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub btnExecutionEdit_Click(sender As Object, e As EventArgs) Handles btnExecutionEdit.Click
        Try
            If Not listExecution.SelectedItems.Count = 0 Then
                If txtListViewJokers.Text = Vrijstelling Then
                    txtListViewJokers.Text = "214748364"
                End If
                CurrentGroup.ExecutionEdit(listExecution.SelectedItems(0).Text, txtListviewAddKandidaat.Text, txtListviewAntw.Value, txtListviewTijd.Value, txtListviewScherm.Text, CInt(txtListViewJokers.Text))
                txtListviewAddKandidaat.Clear()
                txtListviewAntw.Value = 0
                txtListviewTijd.Value = 0
                txtListviewScherm.SelectedIndex = 0
                txtListViewJokers.SelectedIndex = 0
                ReloadExecution()
            Else
                MsgBox(GetLang("SelectItemFirst"), MsgBoxStyle.Exclamation)
            End If
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ExecutionEdit()
        Try
            If Not listExecution.SelectedItems.Count = 0 Then
                With CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).ExecutionResults(listExecution.SelectedItems(0).Text)
                    txtListviewAddKandidaat.Text = .Candidate
                    txtListviewAntw.Value = .AnswersRight
                    txtListviewTijd.Value = .Time
                    txtListviewScherm.Text = .Screen
                    If .Jokers = "214748364" Then
                        txtListViewJokers.Text = Vrijstelling
                    Else
                        txtListViewJokers.Text = .Jokers
                    End If
                End With
            Else
                MsgBox(GetLang("SelectItemFirst"), MsgBoxStyle.Exclamation)
            End If
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try

    End Sub

    Private Sub ToolStripExecutionEdit_Click(sender As Object, e As EventArgs) Handles ToolStripExecutionEdit.Click
        ExecutionEdit()
    End Sub

    Private Sub listExecution_MouseDoubleClick(sender As Object, e As MouseEventArgs) Handles listExecution.MouseDoubleClick
        ExecutionEdit()
    End Sub

    Private Sub rShowAnswersInGroups_CheckedChanged(sender As Object, e As EventArgs) Handles rShowAnswersInGroups.CheckedChanged
        If rShowAnswersInGroups.Checked Then
            listAnswers.ShowGroups = True
            'listAnswers.Columns("listAnswersCandidate").MaximumWidth = 0
        Else
            listAnswers.ShowGroups = False
            'listAnswers.Columns("listAnswersCandidate").MaximumWidth = 200
        End If
    End Sub

    Private Sub ExecutionRemove()
        Try
            If Not listExecution.SelectedItems.Count = 0 Then
                CurrentGroup.ExecutionRemove(listExecution.SelectedItems(0).Text)
            Else
                MsgBox(GetLang("SelectItemFirst"), MsgBoxStyle.Exclamation)
            End If
            ReloadExecution()
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub ToolStripExecutionRemove_Click(sender As Object, e As EventArgs) Handles ToolStripExecutionRemove.Click
        ExecutionRemove()
    End Sub

    Private Sub listCandidates_KeyDown(sender As Object, e As KeyEventArgs) Handles listCandidates.KeyDown
        If e.KeyCode = Keys.Delete Then
            RemoveCandidate()
        ElseIf e.KeyCode = Keys.Enter Then
            EditCandidate(True)
        End If
    End Sub

    Private Sub listAnswers_SelectedIndexChanged(sender As Object, e As EventArgs) Handles listAnswers.SelectedIndexChanged

    End Sub

    Private Sub listAnswers_KeyDown(sender As Object, e As KeyEventArgs) Handles listAnswers.KeyDown
        If e.KeyCode = Keys.Delete Then
            RemoveAnswer()
        End If
    End Sub

    Private Sub listExecution_KeyDown(sender As Object, e As KeyEventArgs) Handles listExecution.KeyDown
        If e.KeyCode = Keys.Delete Then
            ExecutionRemove()
        ElseIf e.KeyCode = Keys.Enter Then
            ExecutionEdit()
        End If
    End Sub

    Private Sub ToolStripExportHTML_Click(sender As Object, e As EventArgs) Handles ToolStripExportHTML.Click
        If SaveFileHTMLExport.ShowDialog() = DialogResult.OK Then
            Dim Write As New StreamWriter(SaveFileHTMLExport.FileName)
            Write.Write(My.Resources.htmlExport01)
            If My.Settings.language = "en" Then
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>Candidate</th>" & vbCrLf & "<th>Answers right</th>" & vbCrLf &
                    "<th>Time</th>" & vbCrLf & "<th>Screen</th>" & vbCrLf & vbCrLf & "<th>Jokers/Exemptions</th>" &
                    "</tr>")
            Else
                Write.WriteLine(
                    "<tr>" & vbCrLf & "<th>Kandidaat</th>" & vbCrLf & "<th>Antwoorden goed</th>" & vbCrLf &
                    "<th>Tijd</th>" & vbCrLf & "<th>Scherm</th>" & vbCrLf & vbCrLf & "<th>Jokers/Vrijstellingen</th>" &
                    "</tr>")
            End If

            For Each item As BetterListViewItem In listExecution.Items
                Write.WriteLine("<tr>")
                Write.WriteLine("<td>" & item.SubItems(0).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(1).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(2).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(3).Text & "</td>")
                Write.WriteLine("<td>" & item.SubItems(4).Text & "</td>")
                Write.WriteLine("</tr>")

            Next
            Write.WriteLine("</table>")
            If My.Settings.language = "en" Then
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print this page</a></p>")
            Else
                Write.WriteLine("<p><A HREF=""javascript:window.print()"">Print deze pagina</a></p>")
            End If
            Write.WriteLine("</body>")
            Write.WriteLine("</html>")
            Write.Close()

            'rSorting.Checked = sortCheckState
            Try
                Process.Start(SaveFileHTMLExport.FileName)
            Catch ex As Exception
                Log(ex.ToString())
            End Try

        End If
    End Sub

    Private Sub Button35_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub comboEpisode_SelectedIndexChanged(sender As Object, e As EventArgs) Handles comboEpisode.SelectedIndexChanged

    End Sub

    Private Sub comboEpisode_SelectedValueChanged(sender As Object, e As EventArgs) Handles comboEpisode.SelectedValueChanged
        CurrentGroup.CurrentEpisode = comboEpisode.Text
    End Sub

    Private Sub btnAddEpisode_Click(sender As Object, e As EventArgs) Handles btnAddEpisode.Click
        Try
            Dim ep As New Episode
            CurrentGroup.Episodes.Add(CurrentGroup.Episodes.Keys(CurrentGroup.Episodes.Count - 1) + 1, ep)
            ReloadDataviews()
        Catch ex As Exception
            Log(ex.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try

    End Sub

    Private Sub btnRemoveEpisode_Click(sender As Object, e As EventArgs) Handles btnRemoveEpisode.Click
        If MsgBox(String.Format(GetLang("RemoveEpisodeDialog"), CurrentGroup.Episodes.Keys(CurrentGroup.Episodes.Count - 1)),
         MsgBoxStyle.YesNo Or MsgBoxStyle.Question) = MsgBoxResult.Yes Then
            CurrentGroup.Episodes.Remove(CurrentGroup.Episodes.Keys(CurrentGroup.Episodes.Count - 1))
            CurrentGroup.CurrentEpisode = CurrentGroup.Episodes.Count
            ReloadDataviews()
        End If
    End Sub

    Private Sub ToolStripButton17_Click(sender As Object, e As EventArgs) Handles ToolStripExecutionScreenButton.Click
        Try
            If listExecution.SelectedItems.Count > 0 AndAlso CurrentGroup.Candidates.ContainsKey(listExecution.SelectedItems(0).Text) Then
                CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).ExecutionResults(listExecution.SelectedItems(0).Text).Screen = ToolStripExecutionScreen.Text
                ReloadExecution()
            End If
        Catch ex As Exception
            Log(e.ToString())
            MsgBox(ex.Message, MsgBoxStyle.Exclamation)
        End Try
    End Sub

    Private Sub comboEpisode_Validated(sender As Object, e As EventArgs) Handles comboEpisode.Validated
        ReloadDataviews()
    End Sub


    Private Sub ToolStripExecutionSort_Click(sender As Object, e As EventArgs) Handles ToolStripExecutionSort.Click
        Dim response As String = InputBox(GetLang("CandidateRedScreenPopup"))
        If IsNumeric(response) Then
            Dim count As Integer = CInt(response)
            Dim message As String = ""

            For i = listExecution.Count - 1 To 0 Step -1
                If Not listExecution.Items(i).Text = CurrentGroup.Mole.Name Then
                    CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).ExecutionResults(listExecution.Items(i).Text).Screen = Rood
                    ReloadExecution()
                    message = message & String.Format(GetLang("CandidateRedScreen"), listExecution.Items(i).Text) & vbCrLf
                    If count <= 1 Then
                        MsgBox(message, MsgBoxStyle.Information)
                        Exit For
                    Else
                        count -= 1
                    End If
                End If
            Next
        Else
            MsgBox(GetLang("NotANumber"), MsgBoxStyle.Exclamation)
        End If
    End Sub

    Private Sub ToolStripCopyCandidates_Click(sender As Object, e As EventArgs) Handles ToolStripCopyCandidates.Click
        CurrentGroup.EpisodeExists(CurrentGroup.CurrentEpisode + 1)
        For Each result In CurrentGroup.Episodes(CurrentGroup.CurrentEpisode).ExecutionResults.Values
            If CurrentGroup.Candidates.ContainsKey(result.Candidate) Then
                If result.Screen = Rood Then
                    CurrentGroup.Candidates(result.Candidate).Active(CurrentGroup.CurrentEpisode + 1) = False
                Else
                    CurrentGroup.Candidates(result.Candidate).Active(CurrentGroup.CurrentEpisode + 1) = True
                End If
            End If
        Next
        ReloadDataviews()
    End Sub

    Private Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        SaveGroupmode()
    End Sub

    Private Sub btnServerStop_Click(sender As Object, e As EventArgs) Handles btnServerStop.Click

    End Sub

    Private Sub ServerStart()
        'Dim server As New Host()
    End Sub

    Private Sub btnServerStart_Click(sender As Object, e As EventArgs) Handles btnServerStart.Click
        Dim serverThread As New System.Threading.Thread(AddressOf ServerStart)
        serverThread.Start()
    End Sub

    Private Sub backgroundServer_DoWork(sender As Object, e As DoWorkEventArgs)

    End Sub

    Private Sub Button6_Click(sender As Object, e As EventArgs) Handles Button6.Click
        'Dim client As New Client("127.0.0.1", 9255, "Hello!")
    End Sub
End Class