<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FolderBrowserDialog2" xml:space="preserve">
    <value>Kies een map om de antwoorden en resultaten van te importeren. Deze zullen van dezelfde aflevering komen.</value>
  </data>
  <data name="geen" xml:space="preserve">
    <value>(geen)</value>
  </data>
  <data name="ImportSuccess" xml:space="preserve">
    <value>De resultaten en antwoorden zijn geïmporteerd</value>
  </data>
  <data name="dpiMessage" xml:space="preserve">
    <value>We hebben gedetecteerd dat uw scherm op {0} dpi staat. Helaas ondersteunt WIDM Exam dat op het moment nog niet volledig! Hoewel het meeste goed zou moeten werken, kunnen er enkele problemen zijn. Mocht u fouten/problemen tegenkomen, stuur dan een e-mail via "Contact" op de website. Bij voorbaat dank.</value>
  </data>
  <data name="Aflevering" xml:space="preserve">
    <value>Aflevering </value>
  </data>
  <data name="ClearListWarning" xml:space="preserve">
    <value>Weet u zeker dat u de lijst leeg wilt maken? Deze actie kan niet ongedaan worden!</value>
  </data>
  <data name="GroepsmodusAan" xml:space="preserve">
    <value>Groepsmodus staat aan!</value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>nl</value>
  </data>
  <data name="OCRAExtended" xml:space="preserve">
    <value>OCR A Extended is geïnstalleerd</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>Dit scherm is {0}×{1}. Andere formaten worden passend gemaakt.</value>
  </data>
  <data name="WrongPass" xml:space="preserve">
    <value>Verkeerde wachtwoord, start de applicatie opnieuw.</value>
  </data>
  <data name="fontMessage" xml:space="preserve">
    <value>Er zijn verschillende lettertypen die gebruikt kunnen worden met WIDM Exam. De belangrijkste lettertypen, die daadwerkelijk gebruikt worden, staan aangegeven. Mocht een optie grijs zijn, betekent dit dat het lettertype niet geïnstalleerd is. Installeer dan het lettertype vanuit de map WIDM Exam. Ga hiervoor naar de map Mijn Documenten &gt; WIDM Exam &gt; Lettertypen, kies een van de mappen met het lettertype. Druk op de rechtermuisknop op het lettertype en vervolgens op "Installeren".</value>
  </data>
  <data name="SaveFirst" xml:space="preserve">
    <value>Wilt u de huidige gegevens opslaan alvorens een nieuwe aflevering te openen? Anders gaan de gegevens van deze aflevering verloren!</value>
  </data>
  <data name="DeleteEpisode" xml:space="preserve">
    <value>Weet u zeker dat u deze aflevering wilt verwijderen?</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Kies eerst een map onder groepsmodus!</value>
  </data>
  <data name="Primair" xml:space="preserve">
    <value>Primair</value>
  </data>
  <data name="MonitorChanged" xml:space="preserve">
    <value>De monitor voor de test en executie is aangepast naar monitor {0}</value>
  </data>
  <data name="WrongFolderGeluid" xml:space="preserve">
    <value>Kies een bestand uit de map "Geluid"</value>
  </data>
  <data name="WrongFolderAfbeelding" xml:space="preserve">
    <value>Kies een bestand uit de map "Afbeeldingen"</value>
  </data>
  <data name="FontNotInstalled" xml:space="preserve">
    <value>Het lettertype {0} is niet geïnstalleerd. Installeer deze voor dit thema.</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Wilt u de wijzigingen opslaan alvorens af te sluiten?</value>
  </data>
  <data name="SavedSuccess" xml:space="preserve">
    <value>Succesvol opgeslagen</value>
  </data>
  <data name="Afl" xml:space="preserve">
    <value>Afl. </value>
  </data>
  <data name="CandidateAlreadyExists" xml:space="preserve">
    <value>Een kandidaat met deze naam bestaat al</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="SelectItemFirst" xml:space="preserve">
    <value>Selecteer eerst een item</value>
  </data>
  <data name="CandidateNotActive" xml:space="preserve">
    <value>Deze kandidaat is niet actief in deze aflevering</value>
  </data>
  <data name="NameNotFound" xml:space="preserve">
    <value>Naam niet gevonden, komt deze naam wel voor?</value>
  </data>
  <data name="RemoveEpisodeDialog" xml:space="preserve">
    <value>Weet je zeker dat je aflevering {0} wilt verwijderen?</value>
  </data>
  <data name="TestAlreadyDone" xml:space="preserve">
    <value>Test is al uitgevoerd door deze kandidaat!</value>
  </data>
  <data name="CandidateRedScreen" xml:space="preserve">
    <value>Kandidaat {0} krijgt nu een rood scherm</value>
  </data>
  <data name="CandidateRedScreenPopup" xml:space="preserve">
    <value>Hoe veel kandidaten moeten een rood scherm krijgen? (Normaliter 1)</value>
  </data>
  <data name="NotANumber" xml:space="preserve">
    <value>Dit is geen getal, voer enkel getallen in (0 - 9)</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>Het opgegeven bestand kan niet worden gevonden</value>
  </data>
</root>